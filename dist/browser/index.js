import{SolanaParser as e,flattenTransactionResponse as n,parseLogs as i}from"@debridge-finance/solana-transaction-parser";import t from"lodash";import{Metaplex as s,PublicKey as a}from"@metaplex-foundation/js";import{getAccount as r,getAssociatedTokenAddressSync as o}from"@solana/spl-token";import u from"cross-fetch";import{PublicKey as m}from"@solana/web3.js";import{match as g}from"ts-pattern";import{PROGRAM_ADDRESS as c,Metadata as S}from"@metaplex-foundation/mpl-token-metadata";import p from"axios";const M=async e=>({data:{rawInstruction:e}}),l=async e=>{const{instructions:n,tokens:i,walletAddress:s,connection:a}=e;if(1==n.filter((e=>"JUPITER_SWAP"==e.type)).length){const e=t.first(n.filter((e=>"SPL_TRANSFER"==e.type))).data,s=t.last(n.filter((e=>"SPL_TRANSFER"==e.type))).data,a=i.find((n=>n.address==e.tokenMint)),r=i.find((e=>e.address==s.tokenMint)),o=a?e.amount/Math.pow(10,a.decimals):e.amount,u=r?s.amount/Math.pow(10,r.decimals):s.amount;return{type:"JUPITER_SWAP",data:{tokenFrom:{...a,amount:o},tokenTo:{...r,amount:u}}}}return null};class d{constructor(){this._obj={}}static ref(){return d.instance||(d.instance=new d),d.instance}set(e,n){this._obj[e]=n}get(e){return this._obj[e]}}const y="So11111111111111111111111111111111111111112",w=async(e,n)=>{const i=`token-${e}`,t=d.ref().get(i);if(t)return t;{const t=new s(n),r=async e=>(await u(e.replace(/[^a-zA-Z0-9 \.\:\/\-]/g,""))).json();try{const n=await t.nfts().findByMint({mintAddress:new a(e)});if(n){const e=await r(n.uri),t={name:n.name,address:n.address.toBase58(),symbol:n.symbol,decimals:n.mint.decimals,logoURI:e.image};return d.ref().set(i,t),t}return null}catch(e){return null}}},k=async(e,n,i)=>{const t=`mint-${e}-${n}`,s=d.ref().get(t);return s||await r(i,new a(e)).then((e=>{const n=e.mint.toBase58();return d.ref().set(t,n),n})).catch((async i=>{if(n){if((await o(new a(y),new a(n))).toBase58()==e)return d.ref().set(t,y),y}}))},f=async e=>{const{instructions:n,tokens:i,walletAddress:s,connection:a}=e;if(1==n.filter((e=>"JUPITER_SWAP_V2"==e.type)).length){const e=t.first(n.filter((e=>"SPL_TRANSFER"==e.type))).data,r=t.last(n.filter((e=>"SPL_TRANSFER"==e.type))).data,o=await k(e.from,s||"",a),u=await k(r.to,s||"",a),m=i.find((e=>e.address==o)),g=i.find((e=>e.address==u)),c=m?e.amount/Math.pow(10,m.decimals):e.amount,S=g?r.amount/Math.pow(10,g.decimals):r.amount;return{type:"JUPITER_SWAP",data:{tokenFrom:{...m,amount:c},tokenTo:{...g,amount:S}}}}return null},A=async e=>{const{instructions:n,tokens:i,walletAddress:s,connection:a}=e;if(1==n.filter((e=>"JUPITER_SWAP_V4"==e.type)).length){const e=n.filter((e=>{const n="SPL_TRANSFER"==e.type,i="SOL_TRANSFER"==e.type&&e.data.from==s;return n||i}));console.log("transfers",e);const u=t.findIndex(e.filter((e=>e.data.owner==s||e.data.from==s))),g=(await Promise.all(e.map(((e,n)=>n!=u?new Promise((async n=>{const i=e.data.to,t=await r(a,new m(i)).then((e=>e.owner.toBase58()==s)).catch((e=>!1));if(t)n(t);else if(s){n(o(new m(y),new m(s)).toBase58()==i)}else n(!1)})):Promise.resolve(!1))))).findIndex((e=>!0===e)),c=u>-1?e[u]:null,S=g>-1?e[g]:null,p=c?c.data:null,M=S?S.data:null,l=p?await k(p.from,s||"",a):"",d=M?await k(M.to,s||"",a):"",w=i.find((e=>e.address==l)),f=i.find((e=>e.address==d)),A=()=>p?w?p.amount/Math.pow(10,w.decimals):"SOL_TRANSFER"==c.type?p.amount/Math.pow(10,9):p.amount:0,P=()=>M?f?M.amount/Math.pow(10,f.decimals):"SOL_TRANSFER"==S.type?M.amount/Math.pow(10,9):M.amount:0;return{type:"JUPITER_SWAP_V4",data:{tokenFrom:{...w,amount:A()},tokenTo:{...f,amount:P()}}}}return null},P=async e=>{const{instructions:n,tokens:i,walletAddress:t,connection:s}=e,a=n.filter((e=>"SOL_TRANSFER"==e.type));if(1==a.length){const e=a[0].data,n={name:"SOL",address:"",symbol:"SOL",logoURI:"https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png",decimals:9};if(n){const i=n?e.amount/Math.pow(10,n.decimals):e.amount,s=()=>t?t==e.from?"WALLET_SEND":t==e.to?"WALLET_RECEIVE":"UNKNOWN":"UNKNOWN";return{type:a[0].type,data:{...e,...n,amount:i,action:s()}}}return null}return null},h=async e=>{const{instructions:n,tokens:i,walletAddress:s,connection:a}=e,r=n.filter((e=>"SPL_TRANSFER"==e.type));if(1==r.length){const e=r[0].data,n=await(async()=>{if(e.tokenMint){const n=i.find((n=>n.address==e.tokenMint));return n||await w(e.tokenMint,a)}if(s){const n=d.ref().get(e.to);if(n)return JSON.parse(n);const a=d.ref().get(e.from);if(a)return JSON.parse(a);return t.first((await Promise.all(i.map((async n=>new Promise((async i=>{const t=o(new m(n.address),new m(s));return t.toBase58()==e.to?(d.ref().set(e.to,JSON.stringify(n)),i(n)):t.toBase58()==e.from?(d.ref().set(e.from,JSON.stringify(n)),i(n)):i(null)})))))).filter((e=>!t.isNull(e))))||null}return null})();if(n){const i=n?e.amount/Math.pow(10,n.decimals):e.amount,t=()=>{if(s){const i=o(new m(n.address),new m(s));return i.toBase58()==e.from?"WALLET_SEND":i.toBase58()==e.to?"WALLET_RECEIVE":"UNKNOWN"}return"UNKNOWN"};return{type:"SPL_TRANSFER",data:{...e,...n,amount:i,action:t()}}}return null}return null},T=async e=>{const{instructions:n,tokens:i,walletAddress:s,connection:a}=e,u=n.filter((e=>"SPL_TRANSFER"==e.type)).map((e=>e.data)).map((e=>new Promise((async n=>{const{from:t,to:u,tokenMint:g}=e,c=await(async()=>{const e=await(async()=>g||await k(t,s||"",a))(),n=i.find((n=>n.address==e));return n||await w(e,a)})();if(!c)return n(null);{const i=()=>{if(s){const e=o(new m(c.address),new m(s));return e.toBase58()==t?"WALLET_SEND":e.toBase58()==u?"WALLET_RECEIVE":"UNKNOWN"}return"UNKNOWN"},g=r(a,new m(t)).then((e=>e.owner.toBase58()==s||"")).catch((async e=>{if(s){return(await o(new m(y),new m(s))).toBase58()==s}return!1})),S=r(a,new m(u)).then((e=>e.owner.toBase58()==s||"")).catch((async e=>{if(s){return(await o(new m(y),new m(s))).toBase58()==u}return!1})),[p,M]=await Promise.all([g,S]);if(!p&&!M)return n(null);{const t=c?e.amount/Math.pow(10,c.decimals):e.amount;n({type:"SPL_TRANSFER",data:{...e,...c,amount:t,action:i()}})}}})))),g=await Promise.all(u);return t.first(t.filter(g,(e=>!t.isNull(e))))||null},b=async e=>({type:"UNKNOWN",data:{}});const v=async(e,n)=>{const i=e.args;return{data:{from:t.find(e.accounts,(e=>"tokenOwnerAccountA"==e.name)).pubkey.toBase58(),to:t.find(e.accounts,(e=>"tokenOwnerAccountB"==e.name)).pubkey.toBase58(),amountIn:Number(i.inAmount),amountOut:Number(i.minimumOutAmount),protocol:"JUPITER",rawInstruction:e}}},I=async(e,n)=>{const i=e.args;return{data:{from:t.find(e.accounts,(e=>"userSourceTokenAccount"==e.name)).pubkey.toBase58(),to:t.find(e.accounts,(e=>"userDestinationTokenAccount"==e.name)).pubkey.toBase58(),amountIn:i.inAmount,amountOut:i.minimumOutAmount,protocol:"JUPITER",rawInstruction:e}}},B=async e=>await M(e);const O=async(e,n)=>{const i=e.args,s=t.find(e.accounts,(e=>"inputTokenAccount"==e.name)).pubkey.toBase58(),a=t.find(e.accounts,(e=>"outputTokenAccount"==e.name)).pubkey.toBase58(),r=1+parseInt(i.inAmountWithSlippage.slippageBps)/1e4;return{data:{from:s,to:a,amountIn:Number(i.inAmountWithSlippage.amount)*(r>0?r:1),amountOut:Number(i.outAmount),protocol:"JUPITER",rawInstruction:e}}},R=async(e,n)=>{var i,s,a,r;const o=e.args,u=null!==(s=null===(i=t.find(e.accounts,(e=>"Remaining 15"==e.name)))||void 0===i?void 0:i.pubkey.toBase58())&&void 0!==s?s:"",m=null!==(r=null===(a=t.find(e.accounts,(e=>"destinationTokenAccount"==e.name)))||void 0===a?void 0:a.pubkey.toBase58())&&void 0!==r?r:"",g=1+parseInt(o.slippageBps)/1e4;return{data:{from:u,to:m,amountIn:Number(o.inAmount)*(g>0?g:1),amountOut:Number(o.quotedOutAmount),protocol:"JUPITER",rawInstruction:e}}},E=async e=>await M(e);const F=async(e,n)=>{const i=e.args;return{data:{from:t.find(e.accounts,(e=>"tokenOwnerAccountA"==e.name)).pubkey.toBase58(),to:t.find(e.accounts,(e=>"tokenOwnerAccountB"==e.name)).pubkey.toBase58(),amountIn:i.amountSpecifiedIsInput?Number(i.amount):0,amountOut:0,protocol:"ORCA",rawInstruction:e}}},N=async e=>await M(e);const L=async e=>{try{const n=await p.get((e=>{if(e.indexOf("/ipfs/")>-1){const n=String(e).split("/");return`https://${n[n.length-1]}.ipfs.nftstorage.link/`.replace(/[^a-zA-Z0-9 \.\:\/\-]/g,"")}return e})(e));return n.data}catch(e){return console.log("err on getNftMetadataFromUri",e),{}}},V=async(e,n)=>{const i=e.accounts.find((e=>"nftMint"==e.name)),t=await(async()=>{if(i){const e=await(async(e,n)=>{const[i]=await m.findProgramAddressSync([Buffer.from("metadata"),new m(c).toBuffer(),new m(n).toBuffer()],new m(c));return console.log("publicKey",i),await S.fromAccountAddress(e,i)})(n,i.pubkey.toBase58());return await L(e.data.uri)}return{}})(),s=e.args;return{data:{listPrice:Number(s.price),marketplace:"TENSOR",nftMint:null==i?void 0:i.pubkey.toBase58(),name:t.name,image:t.image,rawInstruction:e}}};const x=[{programId:"JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4",name:"Jupiter Swap",idl:{version:"0.1.0",name:"jupiter",instructions:[{name:"route",docs:["route_plan Topologically sorted trade DAG"],accounts:[{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"userSourceTokenAccount",isMut:!1,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!1,isSigner:!1},{name:"destinationTokenAccount",isMut:!1,isSigner:!1,isOptional:!0},{name:"destinationMint",isMut:!1,isSigner:!1},{name:"platformFeeAccount",isMut:!0,isSigner:!1,isOptional:!0},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"routePlan",type:{vec:{defined:"RoutePlanStep"}}},{name:"inAmount",type:"u64"},{name:"quotedOutAmount",type:"u64"},{name:"slippageBps",type:"u16"},{name:"platformFeeBps",type:"u8"}],returns:"u64"},{name:"routeWithTokenLedger",accounts:[{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"userSourceTokenAccount",isMut:!1,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!1,isSigner:!1},{name:"destinationTokenAccount",isMut:!1,isSigner:!1,isOptional:!0},{name:"destinationMint",isMut:!1,isSigner:!1},{name:"platformFeeAccount",isMut:!0,isSigner:!1,isOptional:!0},{name:"tokenLedger",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"routePlan",type:{vec:{defined:"RoutePlanStep"}}},{name:"quotedOutAmount",type:"u64"},{name:"slippageBps",type:"u16"},{name:"platformFeeBps",type:"u8"}],returns:"u64"},{name:"sharedAccountsRoute",docs:["Route by using program owned token accounts and open orders accounts."],accounts:[{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"programAuthority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceTokenAccount",isMut:!0,isSigner:!1},{name:"programSourceTokenAccount",isMut:!0,isSigner:!1},{name:"programDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"destinationTokenAccount",isMut:!0,isSigner:!1},{name:"sourceMint",isMut:!1,isSigner:!1},{name:"destinationMint",isMut:!1,isSigner:!1},{name:"platformFeeAccount",isMut:!0,isSigner:!1,isOptional:!0},{name:"token2022Program",isMut:!1,isSigner:!1,isOptional:!0},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"id",type:"u8"},{name:"routePlan",type:{vec:{defined:"RoutePlanStep"}}},{name:"inAmount",type:"u64"},{name:"quotedOutAmount",type:"u64"},{name:"slippageBps",type:"u16"},{name:"platformFeeBps",type:"u8"}],returns:"u64"},{name:"sharedAccountsRouteWithTokenLedger",accounts:[{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"programAuthority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceTokenAccount",isMut:!0,isSigner:!1},{name:"programSourceTokenAccount",isMut:!0,isSigner:!1},{name:"programDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"destinationTokenAccount",isMut:!0,isSigner:!1},{name:"sourceMint",isMut:!1,isSigner:!1},{name:"destinationMint",isMut:!1,isSigner:!1},{name:"platformFeeAccount",isMut:!0,isSigner:!1,isOptional:!0},{name:"token2022Program",isMut:!1,isSigner:!1,isOptional:!0},{name:"tokenLedger",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"id",type:"u8"},{name:"routePlan",type:{vec:{defined:"RoutePlanStep"}}},{name:"quotedOutAmount",type:"u64"},{name:"slippageBps",type:"u16"},{name:"platformFeeBps",type:"u8"}],returns:"u64"},{name:"sharedAccountsExactOutRoute",docs:["Route by using program owned token accounts and open orders accounts."],accounts:[{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"programAuthority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceTokenAccount",isMut:!0,isSigner:!1},{name:"programSourceTokenAccount",isMut:!0,isSigner:!1},{name:"programDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"destinationTokenAccount",isMut:!0,isSigner:!1},{name:"sourceMint",isMut:!1,isSigner:!1},{name:"destinationMint",isMut:!1,isSigner:!1},{name:"platformFeeAccount",isMut:!0,isSigner:!1,isOptional:!0},{name:"token2022Program",isMut:!1,isSigner:!1,isOptional:!0},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"id",type:"u8"},{name:"routePlan",type:{vec:{defined:"RoutePlanStep"}}},{name:"outAmount",type:"u64"},{name:"quotedInAmount",type:"u64"},{name:"slippageBps",type:"u16"},{name:"platformFeeBps",type:"u8"}],returns:"u64"},{name:"setTokenLedger",accounts:[{name:"tokenLedger",isMut:!0,isSigner:!1},{name:"tokenAccount",isMut:!1,isSigner:!1}],args:[]},{name:"createOpenOrders",accounts:[{name:"openOrders",isMut:!0,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"market",isMut:!1,isSigner:!1}],args:[]},{name:"createProgramOpenOrders",accounts:[{name:"openOrders",isMut:!0,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0},{name:"programAuthority",isMut:!1,isSigner:!1},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"market",isMut:!1,isSigner:!1}],args:[{name:"id",type:"u8"}]},{name:"createTokenLedger",accounts:[{name:"tokenLedger",isMut:!0,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"mercurialSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"swapState",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"poolAuthority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!1},{name:"sourceTokenAccount",isMut:!0,isSigner:!1},{name:"destinationTokenAccount",isMut:!0,isSigner:!1}],args:[]},{name:"cykuraSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"signer",isMut:!1,isSigner:!1},{name:"factoryState",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"lastObservationState",isMut:!0,isSigner:!1},{name:"coreProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"serumSwap",accounts:[{name:"market",accounts:[{name:"market",isMut:!0,isSigner:!1},{name:"openOrders",isMut:!0,isSigner:!1},{name:"requestQueue",isMut:!0,isSigner:!1},{name:"eventQueue",isMut:!0,isSigner:!1},{name:"bids",isMut:!0,isSigner:!1},{name:"asks",isMut:!0,isSigner:!1},{name:"coinVault",isMut:!0,isSigner:!1},{name:"pcVault",isMut:!0,isSigner:!1},{name:"vaultSigner",isMut:!1,isSigner:!1}]},{name:"authority",isMut:!1,isSigner:!1},{name:"orderPayerTokenAccount",isMut:!0,isSigner:!1},{name:"coinWallet",isMut:!0,isSigner:!1},{name:"pcWallet",isMut:!0,isSigner:!1},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"saberSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapAuthority",isMut:!1,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"feesTokenAccount",isMut:!0,isSigner:!1}],args:[]},{name:"saberAddDecimals",accounts:[{name:"addDecimalsProgram",isMut:!1,isSigner:!1},{name:"wrapper",isMut:!1,isSigner:!1},{name:"wrapperMint",isMut:!0,isSigner:!1},{name:"wrapperUnderlyingTokens",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!1},{name:"userUnderlyingTokens",isMut:!0,isSigner:!1},{name:"userWrappedTokens",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"tokenSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!1},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[]},{name:"tokenSwapV2",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!1},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1},{name:"sourceMint",isMut:!1,isSigner:!1},{name:"destinationMint",isMut:!1,isSigner:!1},{name:"sourceTokenProgram",isMut:!1,isSigner:!1},{name:"destinationTokenProgram",isMut:!1,isSigner:!1},{name:"poolTokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"senchaSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!0,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"inputFeesAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"outputFeesAccount",isMut:!0,isSigner:!1}],args:[]},{name:"stepSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!1},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[]},{name:"cropperSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapState",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!1},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[]},{name:"raydiumSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"ammId",isMut:!0,isSigner:!1},{name:"ammAuthority",isMut:!1,isSigner:!1},{name:"ammOpenOrders",isMut:!0,isSigner:!1},{name:"poolCoinTokenAccount",isMut:!0,isSigner:!1},{name:"poolPcTokenAccount",isMut:!0,isSigner:!1},{name:"serumProgramId",isMut:!1,isSigner:!1},{name:"serumMarket",isMut:!0,isSigner:!1},{name:"serumBids",isMut:!0,isSigner:!1},{name:"serumAsks",isMut:!0,isSigner:!1},{name:"serumEventQueue",isMut:!0,isSigner:!1},{name:"serumCoinVaultAccount",isMut:!0,isSigner:!1},{name:"serumPcVaultAccount",isMut:!0,isSigner:!1},{name:"serumVaultSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userSourceOwner",isMut:!1,isSigner:!1}],args:[]},{name:"cremaSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"clmmConfig",isMut:!1,isSigner:!1},{name:"clmmpool",isMut:!0,isSigner:!1},{name:"tokenA",isMut:!1,isSigner:!1},{name:"tokenB",isMut:!1,isSigner:!1},{name:"accountA",isMut:!0,isSigner:!1},{name:"accountB",isMut:!0,isSigner:!1},{name:"tokenAVault",isMut:!0,isSigner:!1},{name:"tokenBVault",isMut:!0,isSigner:!1},{name:"tickArrayMap",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!1},{name:"partner",isMut:!1,isSigner:!1},{name:"partnerAtaA",isMut:!0,isSigner:!1},{name:"partnerAtaB",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"lifinitySwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"amm",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!1},{name:"sourceInfo",isMut:!0,isSigner:!1},{name:"destinationInfo",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"feeAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"pythAccount",isMut:!1,isSigner:!1},{name:"pythPcAccount",isMut:!1,isSigner:!1},{name:"configAccount",isMut:!0,isSigner:!1}],args:[]},{name:"marinadeDeposit",accounts:[{name:"marinadeFinanceProgram",isMut:!1,isSigner:!1},{name:"state",isMut:!0,isSigner:!1},{name:"msolMint",isMut:!0,isSigner:!1},{name:"liqPoolSolLegPda",isMut:!0,isSigner:!1},{name:"liqPoolMsolLeg",isMut:!0,isSigner:!1},{name:"liqPoolMsolLegAuthority",isMut:!1,isSigner:!1},{name:"reservePda",isMut:!0,isSigner:!1},{name:"transferFrom",isMut:!0,isSigner:!1},{name:"mintTo",isMut:!0,isSigner:!1},{name:"msolMintAuthority",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"userWsolTokenAccount",isMut:!0,isSigner:!1},{name:"tempWsolTokenAccount",isMut:!0,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!1},{name:"payer",isMut:!0,isSigner:!1},{name:"wsolMint",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"marinadeUnstake",accounts:[{name:"marinadeFinanceProgram",isMut:!1,isSigner:!1},{name:"state",isMut:!0,isSigner:!1},{name:"msolMint",isMut:!0,isSigner:!1},{name:"liqPoolSolLegPda",isMut:!0,isSigner:!1},{name:"liqPoolMsolLeg",isMut:!0,isSigner:!1},{name:"treasuryMsolAccount",isMut:!0,isSigner:!1},{name:"getMsolFrom",isMut:!0,isSigner:!1},{name:"getMsolFromAuthority",isMut:!1,isSigner:!1},{name:"transferSolTo",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"userWsolTokenAccount",isMut:!0,isSigner:!1}],args:[]},{name:"aldrinSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!1,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"baseTokenVault",isMut:!0,isSigner:!1},{name:"quoteTokenVault",isMut:!0,isSigner:!1},{name:"feePoolTokenAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!1},{name:"userBaseTokenAccount",isMut:!0,isSigner:!1},{name:"userQuoteTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"aldrinV2Swap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!1,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"baseTokenVault",isMut:!0,isSigner:!1},{name:"quoteTokenVault",isMut:!0,isSigner:!1},{name:"feePoolTokenAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!1},{name:"userBaseTokenAccount",isMut:!0,isSigner:!1},{name:"userQuoteTokenAccount",isMut:!0,isSigner:!1},{name:"curve",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"whirlpoolSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tokenAuthority",isMut:!1,isSigner:!1},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tickArray0",isMut:!0,isSigner:!1},{name:"tickArray1",isMut:!0,isSigner:!1},{name:"tickArray2",isMut:!0,isSigner:!1},{name:"oracle",isMut:!1,isSigner:!1,docs:["Oracle is currently unused and will be enabled on subsequent updates"]}],args:[]},{name:"invariantSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"state",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"tickmap",isMut:!0,isSigner:!1},{name:"accountX",isMut:!0,isSigner:!1},{name:"accountY",isMut:!0,isSigner:!1},{name:"reserveX",isMut:!0,isSigner:!1},{name:"reserveY",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!1},{name:"programAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"meteoraSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"userSourceToken",isMut:!0,isSigner:!1},{name:"userDestinationToken",isMut:!0,isSigner:!1},{name:"aVault",isMut:!0,isSigner:!1},{name:"bVault",isMut:!0,isSigner:!1},{name:"aTokenVault",isMut:!0,isSigner:!1},{name:"bTokenVault",isMut:!0,isSigner:!1},{name:"aVaultLpMint",isMut:!0,isSigner:!1},{name:"bVaultLpMint",isMut:!0,isSigner:!1},{name:"aVaultLp",isMut:!0,isSigner:!1},{name:"bVaultLp",isMut:!0,isSigner:!1},{name:"adminTokenFee",isMut:!0,isSigner:!1},{name:"user",isMut:!1,isSigner:!1},{name:"vaultProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"goosefxSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"controller",isMut:!1,isSigner:!1},{name:"pair",isMut:!0,isSigner:!1},{name:"sslIn",isMut:!0,isSigner:!1},{name:"sslOut",isMut:!0,isSigner:!1},{name:"liabilityVaultIn",isMut:!0,isSigner:!1},{name:"swappedLiabilityVaultIn",isMut:!0,isSigner:!1},{name:"liabilityVaultOut",isMut:!0,isSigner:!1},{name:"swappedLiabilityVaultOut",isMut:!0,isSigner:!1},{name:"userInAta",isMut:!0,isSigner:!1},{name:"userOutAta",isMut:!0,isSigner:!1},{name:"feeCollectorAta",isMut:!0,isSigner:!1},{name:"userWallet",isMut:!1,isSigner:!1},{name:"feeCollector",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"deltafiSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"marketConfig",isMut:!1,isSigner:!1},{name:"swapInfo",isMut:!0,isSigner:!1},{name:"userSourceToken",isMut:!0,isSigner:!1},{name:"userDestinationToken",isMut:!0,isSigner:!1},{name:"swapSourceToken",isMut:!0,isSigner:!1},{name:"swapDestinationToken",isMut:!0,isSigner:!1},{name:"deltafiUser",isMut:!0,isSigner:!1},{name:"adminDestinationToken",isMut:!0,isSigner:!1},{name:"pythPriceBase",isMut:!1,isSigner:!1},{name:"pythPriceQuote",isMut:!1,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"balansolSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"authority",isMut:!0,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"taxMan",isMut:!0,isSigner:!1},{name:"bidMint",isMut:!1,isSigner:!1},{name:"treasurer",isMut:!1,isSigner:!1},{name:"srcTreasury",isMut:!0,isSigner:!1},{name:"srcAssociatedTokenAccount",isMut:!0,isSigner:!1},{name:"askMint",isMut:!1,isSigner:!1},{name:"dstTreasury",isMut:!0,isSigner:!1},{name:"dstAssociatedTokenAccount",isMut:!0,isSigner:!1},{name:"dstTokenAccountTaxman",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"marcoPoloSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"state",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"tokenX",isMut:!1,isSigner:!1},{name:"tokenY",isMut:!1,isSigner:!1},{name:"poolXAccount",isMut:!0,isSigner:!1},{name:"poolYAccount",isMut:!0,isSigner:!1},{name:"swapperXAccount",isMut:!0,isSigner:!1},{name:"swapperYAccount",isMut:!0,isSigner:!1},{name:"swapper",isMut:!0,isSigner:!1},{name:"referrerXAccount",isMut:!0,isSigner:!1},{name:"referrerYAccount",isMut:!0,isSigner:!1},{name:"referrer",isMut:!0,isSigner:!1},{name:"programAuthority",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"dradexSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pair",isMut:!0,isSigner:!1},{name:"market",isMut:!0,isSigner:!1},{name:"eventQueue",isMut:!0,isSigner:!1},{name:"dexUser",isMut:!1,isSigner:!1},{name:"marketUser",isMut:!0,isSigner:!1},{name:"bids",isMut:!0,isSigner:!1},{name:"asks",isMut:!0,isSigner:!1},{name:"t0Vault",isMut:!0,isSigner:!1},{name:"t1Vault",isMut:!0,isSigner:!1},{name:"t0User",isMut:!0,isSigner:!1},{name:"t1User",isMut:!0,isSigner:!1},{name:"master",isMut:!1,isSigner:!1},{name:"signer",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"logger",isMut:!1,isSigner:!1}],args:[]},{name:"lifinityV2Swap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"amm",isMut:!0,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!1},{name:"sourceInfo",isMut:!0,isSigner:!1},{name:"destinationInfo",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"feeAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"oracleMainAccount",isMut:!1,isSigner:!1},{name:"oracleSubAccount",isMut:!1,isSigner:!1},{name:"oraclePcAccount",isMut:!1,isSigner:!1}],args:[]},{name:"raydiumClmmSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"payer",isMut:!1,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tickArray",isMut:!0,isSigner:!1}],args:[]},{name:"phoenixSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"logAuthority",isMut:!1,isSigner:!1},{name:"market",isMut:!0,isSigner:!1},{name:"trader",isMut:!1,isSigner:!1},{name:"baseAccount",isMut:!0,isSigner:!1},{name:"quoteAccount",isMut:!0,isSigner:!1},{name:"baseVault",isMut:!0,isSigner:!1},{name:"quoteVault",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"symmetrySwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"buyer",isMut:!1,isSigner:!1},{name:"fundState",isMut:!0,isSigner:!1},{name:"pdaAccount",isMut:!1,isSigner:!1},{name:"pdaFromTokenAccount",isMut:!0,isSigner:!1},{name:"buyerFromTokenAccount",isMut:!0,isSigner:!1},{name:"pdaToTokenAccount",isMut:!0,isSigner:!1},{name:"buyerToTokenAccount",isMut:!0,isSigner:!1},{name:"swapFeeAccount",isMut:!0,isSigner:!1},{name:"hostFeeAccount",isMut:!0,isSigner:!1},{name:"managerFeeAccount",isMut:!0,isSigner:!1},{name:"tokenInfo",isMut:!1,isSigner:!1},{name:"prismData",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"heliumTreasuryManagementRedeemV0",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"treasuryManagement",isMut:!1,isSigner:!1},{name:"treasuryMint",isMut:!1,isSigner:!1},{name:"supplyMint",isMut:!0,isSigner:!1},{name:"treasury",isMut:!0,isSigner:!1},{name:"circuitBreaker",isMut:!0,isSigner:!1},{name:"from",isMut:!0,isSigner:!1},{name:"to",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!1},{name:"circuitBreakerProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]}],accounts:[{name:"TokenLedger",type:{kind:"struct",fields:[{name:"tokenAccount",type:"publicKey"},{name:"amount",type:"u64"}]}}],types:[{name:"AmountWithSlippage",type:{kind:"struct",fields:[{name:"amount",type:"u64"},{name:"slippageBps",type:"u16"}]}},{name:"RoutePlanStep",type:{kind:"struct",fields:[{name:"swap",type:{defined:"Swap"}},{name:"percent",type:"u8"},{name:"inputIndex",type:"u8"},{name:"outputIndex",type:"u8"}]}},{name:"Side",type:{kind:"enum",variants:[{name:"Bid"},{name:"Ask"}]}},{name:"Swap",type:{kind:"enum",variants:[{name:"Saber"},{name:"SaberAddDecimalsDeposit"},{name:"SaberAddDecimalsWithdraw"},{name:"TokenSwap"},{name:"Sencha"},{name:"Step"},{name:"Cropper"},{name:"Raydium"},{name:"Crema",fields:[{name:"a_to_b",type:"bool"}]},{name:"Lifinity"},{name:"Mercurial"},{name:"Cykura"},{name:"Serum",fields:[{name:"side",type:{defined:"Side"}}]},{name:"MarinadeDeposit"},{name:"MarinadeUnstake"},{name:"Aldrin",fields:[{name:"side",type:{defined:"Side"}}]},{name:"AldrinV2",fields:[{name:"side",type:{defined:"Side"}}]},{name:"Whirlpool",fields:[{name:"a_to_b",type:"bool"}]},{name:"Invariant",fields:[{name:"x_to_y",type:"bool"}]},{name:"Meteora"},{name:"GooseFX"},{name:"DeltaFi",fields:[{name:"stable",type:"bool"}]},{name:"Balansol"},{name:"MarcoPolo",fields:[{name:"x_to_y",type:"bool"}]},{name:"Dradex",fields:[{name:"side",type:{defined:"Side"}}]},{name:"LifinityV2"},{name:"RaydiumClmm"},{name:"Openbook",fields:[{name:"side",type:{defined:"Side"}}]},{name:"Phoenix",fields:[{name:"side",type:{defined:"Side"}}]},{name:"Symmetry",fields:[{name:"from_token_id",type:"u64"},{name:"to_token_id",type:"u64"}]},{name:"TokenSwapV2"},{name:"HeliumTreasuryManagementRedeemV0"},{name:"StakeDexStakeWrappedSol"},{name:"StakeDexSwapViaStake",fields:[{name:"bridge_stake_seed",type:"u32"}]}]}}],events:[{name:"SwapEvent",fields:[{name:"amm",type:"publicKey",index:!1},{name:"inputMint",type:"publicKey",index:!1},{name:"inputAmount",type:"u64",index:!1},{name:"outputMint",type:"publicKey",index:!1},{name:"outputAmount",type:"u64",index:!1}]},{name:"FeeEvent",fields:[{name:"account",type:"publicKey",index:!1},{name:"mint",type:"publicKey",index:!1},{name:"amount",type:"u64",index:!1}]}],errors:[{code:6e3,name:"EmptyRoute",msg:"Empty route"},{code:6001,name:"SlippageToleranceExceeded",msg:"Slippage tolerance exceeded"},{code:6002,name:"InvalidCalculation",msg:"Invalid calculation"},{code:6003,name:"MissingPlatformFeeAccount",msg:"Missing platform fee account"},{code:6004,name:"InvalidSlippage",msg:"Invalid slippage"},{code:6005,name:"NotEnoughPercent",msg:"Not enough percent to 100"},{code:6006,name:"InvalidInputIndex",msg:"Token input index is invalid"},{code:6007,name:"InvalidOutputIndex",msg:"Token output index is invalid"},{code:6008,name:"NotEnoughAccountKeys",msg:"Not Enough Account keys"},{code:6009,name:"NonZeroMinimumOutAmountNotSupported",msg:"Non zero minimum out amount not supported"},{code:6010,name:"InvalidRoutePlan",msg:"Invalid route plan"},{code:6011,name:"InvalidReferralAuthority",msg:"Invalid referral authority"},{code:6012,name:"LedgerTokenAccountDoesNotMatch",msg:"Token account doesn't match the ledger"},{code:6013,name:"InvalidTokenLedger",msg:"Invalid token ledger"},{code:6014,name:"IncorrectTokenProgramID",msg:"Token program ID is invalid"},{code:6015,name:"TokenProgramNotProvided",msg:"Token program not provided"},{code:6016,name:"SwapNotSupported",msg:"Swap not supported"},{code:6017,name:"ExactOutAmountNotMatched",msg:"Exact out amount doesn't match"}]},humanizeFn:async(e,n)=>{const i=await g(e.name).with("sharedAccountsRoute",(async()=>await(async(e,n)=>{const i=e.args,s=t.find(e.accounts,(e=>"sourceTokenAccount"==e.name)).pubkey.toBase58(),a=t.find(e.accounts,(e=>"destinationTokenAccount"==e.name)).pubkey.toBase58(),r=t.find(e.accounts,(e=>"userTransferAuthority"==e.name)).pubkey.toBase58();return{data:{from:s,to:a,amountIn:Number(i.inAmount),amountOut:Number(i.quotedOutAmount),authority:r,protocol:"JUPITER",rawInstruction:e}}})(e))).otherwise((async()=>await(async e=>await M(e))(e)));return console.log("Jupiter Program:",i),{data:i.data,type:g(e.name).with("sharedAccountsRoute",(()=>"JUPITER_SWAP")).otherwise((()=>"UNKNOWN")),relevance:"PRIMARY"}}},{programId:"JUP2jxvXaqu7NQY1GmNF4m1vodw12LVXYxbFL2uJvfo",name:"Jupiter Swap V2",idl:{version:"0.1.0",name:"jupiter",instructions:[{name:"mercurialExchange",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"swapState",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"poolAuthority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceTokenAccount",isMut:!0,isSigner:!1},{name:"destinationTokenAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"saberExchange",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapAuthority",isMut:!1,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"clock",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"feesTokenAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"saberSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapAuthority",isMut:!1,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"feesTokenAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"saberAddDecimalsDeposit",accounts:[{name:"addDecimalsProgram",isMut:!1,isSigner:!1},{name:"wrapper",isMut:!1,isSigner:!1},{name:"wrapperMint",isMut:!0,isSigner:!1},{name:"wrapperUnderlyingTokens",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!0},{name:"userUnderlyingTokens",isMut:!0,isSigner:!1},{name:"userWrappedTokens",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"saberAddDecimalsWithdraw",accounts:[{name:"addDecimalsProgram",isMut:!1,isSigner:!1},{name:"wrapper",isMut:!1,isSigner:!1},{name:"wrapperMint",isMut:!0,isSigner:!1},{name:"wrapperUnderlyingTokens",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!0},{name:"userUnderlyingTokens",isMut:!0,isSigner:!1},{name:"userWrappedTokens",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"senchaExchange",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!0,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"inputFeesAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"outputFeesAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"serumSwap",accounts:[{name:"market",accounts:[{name:"market",isMut:!0,isSigner:!1},{name:"openOrders",isMut:!0,isSigner:!1},{name:"requestQueue",isMut:!0,isSigner:!1},{name:"eventQueue",isMut:!0,isSigner:!1},{name:"bids",isMut:!0,isSigner:!1},{name:"asks",isMut:!0,isSigner:!1},{name:"coinVault",isMut:!0,isSigner:!1},{name:"pcVault",isMut:!0,isSigner:!1},{name:"vaultSigner",isMut:!1,isSigner:!1}]},{name:"authority",isMut:!1,isSigner:!0},{name:"orderPayerTokenAccount",isMut:!0,isSigner:!1},{name:"coinWallet",isMut:!0,isSigner:!1},{name:"pcWallet",isMut:!0,isSigner:!1},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"side",type:{defined:"Side"}},{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"tokenSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"stepTokenSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"cropperTokenSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapState",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"raydiumSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"ammId",isMut:!0,isSigner:!1},{name:"ammAuthority",isMut:!1,isSigner:!1},{name:"ammOpenOrders",isMut:!0,isSigner:!1},{name:"ammTargetOrders",isMut:!0,isSigner:!1},{name:"poolCoinTokenAccount",isMut:!0,isSigner:!1},{name:"poolPcTokenAccount",isMut:!0,isSigner:!1},{name:"serumProgramId",isMut:!1,isSigner:!1},{name:"serumMarket",isMut:!0,isSigner:!1},{name:"serumBids",isMut:!0,isSigner:!1},{name:"serumAsks",isMut:!0,isSigner:!1},{name:"serumEventQueue",isMut:!0,isSigner:!1},{name:"serumCoinVaultAccount",isMut:!0,isSigner:!1},{name:"serumPcVaultAccount",isMut:!0,isSigner:!1},{name:"serumVaultSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userSourceOwner",isMut:!1,isSigner:!0}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"raydiumSwapV2",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"ammId",isMut:!0,isSigner:!1},{name:"ammAuthority",isMut:!1,isSigner:!1},{name:"ammOpenOrders",isMut:!0,isSigner:!1},{name:"poolCoinTokenAccount",isMut:!0,isSigner:!1},{name:"poolPcTokenAccount",isMut:!0,isSigner:!1},{name:"serumProgramId",isMut:!1,isSigner:!1},{name:"serumMarket",isMut:!0,isSigner:!1},{name:"serumBids",isMut:!0,isSigner:!1},{name:"serumAsks",isMut:!0,isSigner:!1},{name:"serumEventQueue",isMut:!0,isSigner:!1},{name:"serumCoinVaultAccount",isMut:!0,isSigner:!1},{name:"serumPcVaultAccount",isMut:!0,isSigner:!1},{name:"serumVaultSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userSourceOwner",isMut:!1,isSigner:!0}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"aldrinSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!1,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"baseTokenVault",isMut:!0,isSigner:!1},{name:"quoteTokenVault",isMut:!0,isSigner:!1},{name:"feePoolTokenAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!0},{name:"userBaseTokenAccount",isMut:!0,isSigner:!1},{name:"userQuoteTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"side",type:{defined:"Side"}},{name:"platformFeeBps",type:"u8"}]},{name:"aldrinV2Swap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!1,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"baseTokenVault",isMut:!0,isSigner:!1},{name:"quoteTokenVault",isMut:!0,isSigner:!1},{name:"feePoolTokenAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!0},{name:"userBaseTokenAccount",isMut:!0,isSigner:!1},{name:"userQuoteTokenAccount",isMut:!0,isSigner:!1},{name:"curve",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"side",type:{defined:"Side"}},{name:"platformFeeBps",type:"u8"}]},{name:"cremaTokenSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"poolSourceTokenAccount",isMut:!0,isSigner:!1},{name:"poolDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"poolTicksAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"lifinityTokenSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"amm",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceInfo",isMut:!0,isSigner:!1},{name:"destinationInfo",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"feeAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"pythAccount",isMut:!1,isSigner:!1},{name:"pythPcAccount",isMut:!1,isSigner:!1},{name:"configAccount",isMut:!0,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"cykuraSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"signer",isMut:!1,isSigner:!0},{name:"factoryState",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"lastObservationState",isMut:!0,isSigner:!1},{name:"coreProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"whirlpoolSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tokenAuthority",isMut:!1,isSigner:!0},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tickArray0",isMut:!0,isSigner:!1},{name:"tickArray1",isMut:!0,isSigner:!1},{name:"tickArray2",isMut:!0,isSigner:!1},{name:"oracle",isMut:!1,isSigner:!1}],args:[{name:"inAmount",type:{option:"u64"}},{name:"minimumOutAmount",type:"u64"},{name:"aToB",type:"bool"},{name:"platformFeeBps",type:"u8"}]},{name:"riskCheckAndFee",accounts:[{name:"tokenLedger",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"minimumOutAmount",type:"u64"},{name:"platformFeeBps",type:"u8"}]},{name:"initializeTokenLedger",accounts:[{name:"tokenLedger",isMut:!0,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"setTokenLedger",accounts:[{name:"tokenLedger",isMut:!0,isSigner:!1},{name:"tokenAccount",isMut:!1,isSigner:!1}],args:[]},{name:"createOpenOrders",accounts:[{name:"openOrders",isMut:!0,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"market",isMut:!1,isSigner:!1}],args:[]}],accounts:[{name:"TokenLedger",type:{kind:"struct",fields:[{name:"tokenAccount",type:"publicKey"},{name:"amount",type:"u64"}]}}],types:[{name:"Swap",type:{kind:"struct",fields:[{name:"tokens",type:"u64"},{name:"minTokens",type:"u64"},{name:"side",type:{defined:"Side"}}]}},{name:"Swap",type:{kind:"struct",fields:[{name:"tokens",type:"u64"},{name:"minTokens",type:"u64"},{name:"side",type:{defined:"Side"}}]}},{name:"Swap",type:{kind:"struct",fields:[{name:"amountIn",type:"u64"},{name:"minimumAmountOut",type:"u64"}]}},{name:"Swap",type:{kind:"struct",fields:[{name:"amount",type:"u64"},{name:"otherAmountThreshold",type:"u64"},{name:"sqrtPriceLimit",type:"u128"},{name:"amountSpecifiedIsInput",type:"bool"},{name:"aToB",type:"bool"}]}},{name:"SwapInstrution",type:{kind:"enum",variants:[{name:"Swap",fields:[{defined:"Swap"}]}]}},{name:"Side",type:{kind:"enum",variants:[{name:"Bid"},{name:"Ask"}]}},{name:"Direction",type:{kind:"enum",variants:[{name:"LeftToRight"},{name:"RightToLeft"}]}}],errors:[{code:6e3,name:"SlippageToleranceExceeded",msg:"Slippage tolerance exceeded"},{code:6001,name:"InvalidTokenLedger",msg:"Invalid token ledger"},{code:6002,name:"MissingTokenLedger",msg:"Missing token ledger"},{code:6003,name:"MissingMercurialExchangeTokenAccount",msg:"Missing mercurial exchange token account"},{code:6004,name:"LedgerTokenAccountDoesNotMatch",msg:"Ledger token account does not match"},{code:6005,name:"MissingPlatformFeeAccount",msg:"Missing platform fee account"},{code:6006,name:"InvalidCalculation",msg:"Invalid calculation"}]},humanizeFn:async(e,n)=>{const[i,t]=await g(e.name).with("whirlpoolSwap",(async()=>new Promise((async n=>n(["JUPITER_SWAP_V2",await v(e)]))))).with("raydiumSwapV2",(async()=>new Promise((async n=>n(["JUPITER_SWAP_V2",await I(e)]))))).otherwise((async()=>new Promise((async n=>n(["UNKNOWN",await B(e)])))));return console.log("Jupiter Program V2:",t),{data:t.data,type:i,relevance:"PRIMARY"}}},{programId:"JUP4Fb2cqiRUcaTHdrPC8h2gNsA2ETXiPDD33WcGuJB",name:"Jupiter Swap V4",idl:{version:"0.1.0",name:"jupiter",instructions:[{name:"route",accounts:[{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"destinationTokenAccount",isMut:!1,isSigner:!1}],args:[{name:"swapLeg",type:{defined:"SwapLeg"}},{name:"inAmount",type:"u64"},{name:"quotedOutAmount",type:"u64"},{name:"slippageBps",type:"u16"},{name:"platformFeeBps",type:"u8"}]},{name:"whirlpoolSwapExactOutput",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tokenAuthority",isMut:!1,isSigner:!0},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tickArray0",isMut:!0,isSigner:!1},{name:"tickArray1",isMut:!0,isSigner:!1},{name:"tickArray2",isMut:!0,isSigner:!1},{name:"oracle",isMut:!1,isSigner:!1,docs:["Oracle is currently unused and will be enabled on subsequent updates"]}],args:[{name:"outAmount",type:"u64"},{name:"inAmountWithSlippage",type:{defined:"AmountWithSlippage"}},{name:"aToB",type:"bool"},{name:"platformFeeBps",type:"u8"}]},{name:"raydiumSwapExactOutput",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"ammId",isMut:!0,isSigner:!1},{name:"ammAuthority",isMut:!1,isSigner:!1},{name:"ammOpenOrders",isMut:!0,isSigner:!1},{name:"poolCoinTokenAccount",isMut:!0,isSigner:!1},{name:"poolPcTokenAccount",isMut:!0,isSigner:!1},{name:"serumProgramId",isMut:!1,isSigner:!1},{name:"serumMarket",isMut:!0,isSigner:!1},{name:"serumBids",isMut:!0,isSigner:!1},{name:"serumAsks",isMut:!0,isSigner:!1},{name:"serumEventQueue",isMut:!0,isSigner:!1},{name:"serumCoinVaultAccount",isMut:!0,isSigner:!1},{name:"serumPcVaultAccount",isMut:!0,isSigner:!1},{name:"serumVaultSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userSourceOwner",isMut:!1,isSigner:!0}],args:[{name:"outAmount",type:"u64"},{name:"inAmountWithSlippage",type:{defined:"AmountWithSlippage"}},{name:"platformFeeBps",type:"u8"}]},{name:"raydiumClmmSwapExactOutput",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"payer",isMut:!1,isSigner:!0},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tickArray",isMut:!0,isSigner:!1}],args:[{name:"outAmount",type:"u64"},{name:"inAmountWithSlippage",type:{defined:"AmountWithSlippage"}},{name:"platformFeeBps",type:"u8"}]},{name:"createOpenOrders",accounts:[{name:"openOrders",isMut:!0,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"market",isMut:!1,isSigner:!1}],args:[]},{name:"createOpenOrderV2",accounts:[{name:"openOrders",isMut:!0,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"market",isMut:!1,isSigner:!1}],args:[]},{name:"mercurialSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"swapState",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"poolAuthority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceTokenAccount",isMut:!0,isSigner:!1},{name:"destinationTokenAccount",isMut:!0,isSigner:!1}],args:[]},{name:"cykuraSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"signer",isMut:!1,isSigner:!0},{name:"factoryState",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"lastObservationState",isMut:!0,isSigner:!1},{name:"coreProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"serumSwap",accounts:[{name:"market",accounts:[{name:"market",isMut:!0,isSigner:!1},{name:"openOrders",isMut:!0,isSigner:!1},{name:"requestQueue",isMut:!0,isSigner:!1},{name:"eventQueue",isMut:!0,isSigner:!1},{name:"bids",isMut:!0,isSigner:!1},{name:"asks",isMut:!0,isSigner:!1},{name:"coinVault",isMut:!0,isSigner:!1},{name:"pcVault",isMut:!0,isSigner:!1},{name:"vaultSigner",isMut:!1,isSigner:!1}]},{name:"authority",isMut:!1,isSigner:!0},{name:"orderPayerTokenAccount",isMut:!0,isSigner:!1},{name:"coinWallet",isMut:!0,isSigner:!1},{name:"pcWallet",isMut:!0,isSigner:!1},{name:"dexProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"saberSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapAuthority",isMut:!1,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"feesTokenAccount",isMut:!0,isSigner:!1}],args:[]},{name:"saberAddDecimals",accounts:[{name:"addDecimalsProgram",isMut:!1,isSigner:!1},{name:"wrapper",isMut:!1,isSigner:!1},{name:"wrapperMint",isMut:!0,isSigner:!1},{name:"wrapperUnderlyingTokens",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!0},{name:"userUnderlyingTokens",isMut:!0,isSigner:!1},{name:"userWrappedTokens",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"tokenSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[]},{name:"senchaSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!0,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!1},{name:"inputUserAccount",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"inputFeesAccount",isMut:!0,isSigner:!1},{name:"outputUserAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"outputFeesAccount",isMut:!0,isSigner:!1}],args:[]},{name:"stepSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[]},{name:"cropperSwap",accounts:[{name:"tokenSwapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"swap",isMut:!1,isSigner:!1},{name:"swapState",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"source",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"destination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"poolFee",isMut:!0,isSigner:!1}],args:[]},{name:"raydiumSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"ammId",isMut:!0,isSigner:!1},{name:"ammAuthority",isMut:!1,isSigner:!1},{name:"ammOpenOrders",isMut:!0,isSigner:!1},{name:"poolCoinTokenAccount",isMut:!0,isSigner:!1},{name:"poolPcTokenAccount",isMut:!0,isSigner:!1},{name:"serumProgramId",isMut:!1,isSigner:!1},{name:"serumMarket",isMut:!0,isSigner:!1},{name:"serumBids",isMut:!0,isSigner:!1},{name:"serumAsks",isMut:!0,isSigner:!1},{name:"serumEventQueue",isMut:!0,isSigner:!1},{name:"serumCoinVaultAccount",isMut:!0,isSigner:!1},{name:"serumPcVaultAccount",isMut:!0,isSigner:!1},{name:"serumVaultSigner",isMut:!1,isSigner:!1},{name:"userSourceTokenAccount",isMut:!0,isSigner:!1},{name:"userDestinationTokenAccount",isMut:!0,isSigner:!1},{name:"userSourceOwner",isMut:!1,isSigner:!0}],args:[]},{name:"cremaSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"clmmConfig",isMut:!1,isSigner:!1},{name:"clmmpool",isMut:!0,isSigner:!1},{name:"tokenA",isMut:!1,isSigner:!1},{name:"tokenB",isMut:!1,isSigner:!1},{name:"accountA",isMut:!0,isSigner:!1},{name:"accountB",isMut:!0,isSigner:!1},{name:"tokenAVault",isMut:!0,isSigner:!1},{name:"tokenBVault",isMut:!0,isSigner:!1},{name:"tickArrayMap",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!0},{name:"partner",isMut:!1,isSigner:!1},{name:"partnerAtaA",isMut:!0,isSigner:!1},{name:"partnerAtaB",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"lifinitySwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"amm",isMut:!1,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceInfo",isMut:!0,isSigner:!1},{name:"destinationInfo",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"feeAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"pythAccount",isMut:!1,isSigner:!1},{name:"pythPcAccount",isMut:!1,isSigner:!1},{name:"configAccount",isMut:!0,isSigner:!1}],args:[]},{name:"marinadeDeposit",accounts:[{name:"marinadeFinanceProgram",isMut:!1,isSigner:!1},{name:"state",isMut:!0,isSigner:!1},{name:"msolMint",isMut:!0,isSigner:!1},{name:"liqPoolSolLegPda",isMut:!0,isSigner:!1},{name:"liqPoolMsolLeg",isMut:!0,isSigner:!1},{name:"liqPoolMsolLegAuthority",isMut:!1,isSigner:!1},{name:"reservePda",isMut:!0,isSigner:!1},{name:"transferFrom",isMut:!0,isSigner:!1},{name:"mintTo",isMut:!0,isSigner:!1},{name:"msolMintAuthority",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"userWsolTokenAccount",isMut:!0,isSigner:!1},{name:"tempWsolTokenAccount",isMut:!0,isSigner:!1},{name:"userTransferAuthority",isMut:!0,isSigner:!0},{name:"wsolMint",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"marinadeUnstake",accounts:[{name:"marinadeFinanceProgram",isMut:!1,isSigner:!1},{name:"state",isMut:!0,isSigner:!1},{name:"msolMint",isMut:!0,isSigner:!1},{name:"liqPoolSolLegPda",isMut:!0,isSigner:!1},{name:"liqPoolMsolLeg",isMut:!0,isSigner:!1},{name:"treasuryMsolAccount",isMut:!0,isSigner:!1},{name:"getMsolFrom",isMut:!0,isSigner:!1},{name:"getMsolFromAuthority",isMut:!1,isSigner:!0},{name:"transferSolTo",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"userWsolTokenAccount",isMut:!0,isSigner:!1}],args:[]},{name:"aldrinSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!1,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"baseTokenVault",isMut:!0,isSigner:!1},{name:"quoteTokenVault",isMut:!0,isSigner:!1},{name:"feePoolTokenAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!0},{name:"userBaseTokenAccount",isMut:!0,isSigner:!1},{name:"userQuoteTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"aldrinV2Swap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!1,isSigner:!1},{name:"poolSigner",isMut:!1,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"baseTokenVault",isMut:!0,isSigner:!1},{name:"quoteTokenVault",isMut:!0,isSigner:!1},{name:"feePoolTokenAccount",isMut:!0,isSigner:!1},{name:"walletAuthority",isMut:!1,isSigner:!0},{name:"userBaseTokenAccount",isMut:!0,isSigner:!1},{name:"userQuoteTokenAccount",isMut:!0,isSigner:!1},{name:"curve",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"whirlpoolSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tokenAuthority",isMut:!1,isSigner:!0},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tickArray0",isMut:!0,isSigner:!1},{name:"tickArray1",isMut:!0,isSigner:!1},{name:"tickArray2",isMut:!0,isSigner:!1},{name:"oracle",isMut:!1,isSigner:!1,docs:["Oracle is currently unused and will be enabled on subsequent updates"]}],args:[]},{name:"invariantSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"state",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"tickmap",isMut:!0,isSigner:!1},{name:"accountX",isMut:!0,isSigner:!1},{name:"accountY",isMut:!0,isSigner:!1},{name:"reserveX",isMut:!0,isSigner:!1},{name:"reserveY",isMut:!0,isSigner:!1},{name:"owner",isMut:!1,isSigner:!0},{name:"programAuthority",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"meteoraSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"userSourceToken",isMut:!0,isSigner:!1},{name:"userDestinationToken",isMut:!0,isSigner:!1},{name:"aVault",isMut:!0,isSigner:!1},{name:"bVault",isMut:!0,isSigner:!1},{name:"aTokenVault",isMut:!0,isSigner:!1},{name:"bTokenVault",isMut:!0,isSigner:!1},{name:"aVaultLpMint",isMut:!0,isSigner:!1},{name:"bVaultLpMint",isMut:!0,isSigner:!1},{name:"aVaultLp",isMut:!0,isSigner:!1},{name:"bVaultLp",isMut:!0,isSigner:!1},{name:"adminTokenFee",isMut:!0,isSigner:!1},{name:"user",isMut:!1,isSigner:!0},{name:"vaultProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"goosefxSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"controller",isMut:!1,isSigner:!1},{name:"pair",isMut:!0,isSigner:!1},{name:"sslIn",isMut:!0,isSigner:!1},{name:"sslOut",isMut:!0,isSigner:!1},{name:"liabilityVaultIn",isMut:!0,isSigner:!1},{name:"swappedLiabilityVaultIn",isMut:!0,isSigner:!1},{name:"liabilityVaultOut",isMut:!0,isSigner:!1},{name:"swappedLiabilityVaultOut",isMut:!0,isSigner:!1},{name:"userInAta",isMut:!0,isSigner:!1},{name:"userOutAta",isMut:!0,isSigner:!1},{name:"feeCollectorAta",isMut:!0,isSigner:!1},{name:"userWallet",isMut:!1,isSigner:!0},{name:"feeCollector",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"deltafiSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"marketConfig",isMut:!1,isSigner:!1},{name:"swapInfo",isMut:!0,isSigner:!1},{name:"userSourceToken",isMut:!0,isSigner:!1},{name:"userDestinationToken",isMut:!0,isSigner:!1},{name:"swapSourceToken",isMut:!0,isSigner:!1},{name:"swapDestinationToken",isMut:!0,isSigner:!1},{name:"deltafiUser",isMut:!0,isSigner:!1},{name:"adminDestinationToken",isMut:!0,isSigner:!1},{name:"pythPriceBase",isMut:!1,isSigner:!1},{name:"pythPriceQuote",isMut:!1,isSigner:!1},{name:"userAuthority",isMut:!1,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"balansolSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"authority",isMut:!0,isSigner:!0},{name:"pool",isMut:!0,isSigner:!1},{name:"taxMan",isMut:!0,isSigner:!1},{name:"bidMint",isMut:!1,isSigner:!1},{name:"treasurer",isMut:!1,isSigner:!1},{name:"srcTreasury",isMut:!0,isSigner:!1},{name:"srcAssociatedTokenAccount",isMut:!0,isSigner:!1},{name:"askMint",isMut:!1,isSigner:!1},{name:"dstTreasury",isMut:!0,isSigner:!1},{name:"dstAssociatedTokenAccount",isMut:!0,isSigner:!1},{name:"dstTokenAccountTaxman",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"marcoPoloSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"state",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"tokenX",isMut:!1,isSigner:!1},{name:"tokenY",isMut:!1,isSigner:!1},{name:"poolXAccount",isMut:!0,isSigner:!1},{name:"poolYAccount",isMut:!0,isSigner:!1},{name:"swapperXAccount",isMut:!0,isSigner:!1},{name:"swapperYAccount",isMut:!0,isSigner:!1},{name:"swapper",isMut:!0,isSigner:!0},{name:"referrerXAccount",isMut:!0,isSigner:!1},{name:"referrerYAccount",isMut:!0,isSigner:!1},{name:"referrer",isMut:!0,isSigner:!1},{name:"programAuthority",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[]},{name:"dradexSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"pair",isMut:!0,isSigner:!1},{name:"market",isMut:!0,isSigner:!1},{name:"eventQueue",isMut:!0,isSigner:!1},{name:"dexUser",isMut:!1,isSigner:!1},{name:"marketUser",isMut:!0,isSigner:!1},{name:"bids",isMut:!0,isSigner:!1},{name:"asks",isMut:!0,isSigner:!1},{name:"t0Vault",isMut:!0,isSigner:!1},{name:"t1Vault",isMut:!0,isSigner:!1},{name:"t0User",isMut:!0,isSigner:!1},{name:"t1User",isMut:!0,isSigner:!1},{name:"master",isMut:!1,isSigner:!1},{name:"signer",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"logger",isMut:!1,isSigner:!1}],args:[]},{name:"lifinityV2Swap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"authority",isMut:!1,isSigner:!1},{name:"amm",isMut:!0,isSigner:!1},{name:"userTransferAuthority",isMut:!1,isSigner:!0},{name:"sourceInfo",isMut:!0,isSigner:!1},{name:"destinationInfo",isMut:!0,isSigner:!1},{name:"swapSource",isMut:!0,isSigner:!1},{name:"swapDestination",isMut:!0,isSigner:!1},{name:"poolMint",isMut:!0,isSigner:!1},{name:"feeAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"oracleMainAccount",isMut:!1,isSigner:!1},{name:"oracleSubAccount",isMut:!1,isSigner:!1},{name:"oraclePcAccount",isMut:!1,isSigner:!1}],args:[]},{name:"raydiumClmmSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"payer",isMut:!1,isSigner:!0},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tickArray",isMut:!0,isSigner:!1}],args:[]},{name:"phoenixSwap",accounts:[{name:"swapProgram",isMut:!1,isSigner:!1},{name:"logAuthority",isMut:!1,isSigner:!1},{name:"market",isMut:!0,isSigner:!1},{name:"trader",isMut:!1,isSigner:!0},{name:"baseAccount",isMut:!0,isSigner:!1},{name:"quoteAccount",isMut:!0,isSigner:!1},{name:"baseVault",isMut:!0,isSigner:!1},{name:"quoteVault",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"claimBonk",accounts:[{name:"openOrders",isMut:!1,isSigner:!1},{name:"bonkMint",isMut:!1,isSigner:!1},{name:"openOrdersBonkTokenAccount",isMut:!0,isSigner:!1},{name:"market",isMut:!1,isSigner:!1},{name:"openOrdersOwner",isMut:!0,isSigner:!1},{name:"claimerTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]}],types:[{name:"AmountWithSlippage",type:{kind:"struct",fields:[{name:"amount",type:"u64"},{name:"slippageBps",type:"u16"}]}},{name:"SplitLegDeeper",type:{kind:"struct",fields:[{name:"percent",type:"u8"},{name:"swapLeg",type:{defined:"SwapLegSwap"}}]}},{name:"SplitLeg",type:{kind:"struct",fields:[{name:"percent",type:"u8"},{name:"swapLeg",type:{defined:"SwapLegDeeper"}}]}},{name:"Side",type:{kind:"enum",variants:[{name:"Bid"},{name:"Ask"}]}},{name:"SwapLegSwap",type:{kind:"enum",variants:[{name:"PlaceholderOne"},{name:"PlaceholderTwo"},{name:"Swap",fields:[{name:"swap",type:{defined:"Swap"}}]}]}},{name:"SwapLegDeeper",type:{kind:"enum",variants:[{name:"Chain",fields:[{name:"swap_legs",type:{vec:{defined:"SwapLegSwap"}}}]},{name:"Split",fields:[{name:"split_legs",type:{vec:{defined:"SplitLegDeeper"}}}]},{name:"Swap",fields:[{name:"swap",type:{defined:"Swap"}}]}]}},{name:"SwapLeg",type:{kind:"enum",variants:[{name:"Chain",fields:[{name:"swap_legs",type:{vec:{defined:"SwapLegDeeper"}}}]},{name:"Split",fields:[{name:"split_legs",type:{vec:{defined:"SplitLeg"}}}]},{name:"Swap",fields:[{name:"swap",type:{defined:"Swap"}}]}]}},{name:"Swap",type:{kind:"enum",variants:[{name:"Saber"},{name:"SaberAddDecimalsDeposit"},{name:"SaberAddDecimalsWithdraw"},{name:"TokenSwap"},{name:"Sencha"},{name:"Step"},{name:"Cropper"},{name:"Raydium"},{name:"Crema",fields:[{name:"a_to_b",type:"bool"}]},{name:"Lifinity"},{name:"Mercurial"},{name:"Cykura"},{name:"Serum",fields:[{name:"side",type:{defined:"Side"}}]},{name:"MarinadeDeposit"},{name:"MarinadeUnstake"},{name:"Aldrin",fields:[{name:"side",type:{defined:"Side"}}]},{name:"AldrinV2",fields:[{name:"side",type:{defined:"Side"}}]},{name:"Whirlpool",fields:[{name:"a_to_b",type:"bool"}]},{name:"Invariant",fields:[{name:"x_to_y",type:"bool"}]},{name:"Meteora"},{name:"GooseFX"},{name:"DeltaFi",fields:[{name:"stable",type:"bool"}]},{name:"Balansol"},{name:"MarcoPolo",fields:[{name:"x_to_y",type:"bool"}]},{name:"Dradex",fields:[{name:"side",type:{defined:"Side"}}]},{name:"LifinityV2"},{name:"RaydiumClmm"},{name:"Openbook",fields:[{name:"side",type:{defined:"Side"}}]},{name:"Phoenix",fields:[{name:"side",type:{defined:"Side"}}]}]}}],events:[{name:"Swap",fields:[{name:"amm",type:"publicKey",index:!1},{name:"inputMint",type:"publicKey",index:!1},{name:"inputAmount",type:"u64",index:!1},{name:"outputMint",type:"publicKey",index:!1},{name:"outputAmount",type:"u64",index:!1}]},{name:"Fee",fields:[{name:"account",type:"publicKey",index:!1},{name:"mint",type:"publicKey",index:!1},{name:"amount",type:"u64",index:!1}]}],errors:[{code:6e3,name:"EmptyRoute",msg:"Empty route"},{code:6001,name:"SlippageToleranceExceeded",msg:"Slippage tolerance exceeded"},{code:6002,name:"InvalidCalculation",msg:"Invalid calculation"},{code:6003,name:"MissingPlatformFeeAccount",msg:"Missing platform fee account"},{code:6004,name:"InvalidSlippage",msg:"Invalid slippage"},{code:6005,name:"NotEnoughPercent",msg:"Not enough percent to 100"},{code:6006,name:"InAmountsStackIsEmpty",msg:"In amounts stack is empty"},{code:6007,name:"OutAmountsStackIsEmpty",msg:"Out amounts stack is empty"},{code:6008,name:"NotEnoughAccountKeys",msg:"Not Enough Account keys"},{code:6009,name:"NonZeroMinimumOutAmountNotSupported",msg:"Non zero minimum out amount not supported"}]},humanizeFn:async(e,n)=>{const[i,t]=await g(e.name).with("raydiumClmmSwapExactOutput",(async()=>new Promise((async n=>n(["JUPITER_SWAP_V4",await O(e)]))))).with("route",(async()=>new Promise((async n=>n(["JUPITER_SWAP_V4",await R(e)]))))).otherwise((async()=>new Promise((async n=>n(["UNKNOWN",await E(e)])))));return console.log("Jupiter Program V4:",t),{data:t.data,type:i,relevance:"PRIMARY"}}},{programId:"TSWAPaqyCSx2KABk68Shruf4rp7CxcNi8hAsbdwmHbN",name:"Tensor Swap",idl:{version:"1.8.0",name:"tensorswap",constants:[{name:"CURRENT_TSWAP_VERSION",type:"u8",value:"1"},{name:"CURRENT_POOL_VERSION",type:"u8",value:"2"},{name:"MAX_MM_FEES_BPS",type:"u16",value:"9999"},{name:"HUNDRED_PCT_BPS",type:"u16",value:"10000"},{name:"MAX_DELTA_BPS",type:"u16",value:"9999"},{name:"SPREAD_TICKS",type:"u8",value:"1"},{name:"TSWAP_TAKER_FEE_BPS",type:"u16",value:"140"},{name:"MAKER_REBATE_BPS",type:"u16",value:"40"},{name:"SNIPE_FEE_BPS",type:"u16",value:"150"},{name:"SNIPE_MIN_FEE",type:"u64",value:"10_000_000"},{name:"SNIPE_PROFIT_SHARE_BPS",type:"u16",value:"2000"},{name:"TAKER_BROKER_PCT",type:"u64",value:"0"},{name:"TSWAP_SIZE",type:{defined:"usize"},value:"8 + 1 + 1 + 2 + 32 * 3"},{name:"POOL_SIZE",type:{defined:"usize"},value:"8 + (3 * 1) + 8 + (2 * 1) + (2 * 8) + 1 + 3 + (5 * 32) + (3 * 4) + (2 * 4) + 8 + 32 + 1 + 1 + 1 + 8 + 8 + 1 + 8 + 4"},{name:"MARGIN_SIZE",type:{defined:"usize"},value:"8 + 32 + 32 + 2 + 1 + 4 + 64"},{name:"SINGLE_LISTING_SIZE",type:{defined:"usize"},value:"8 + (32 * 2) + 8 + 1 + 64"},{name:"DEPOSIT_RECEIPT_SIZE",type:{defined:"usize"},value:"8 + 1 + 32 * 3"},{name:"NFT_AUTHORITY_SIZE",type:{defined:"usize"},value:"8 + 1 + 32 + 32"}],instructions:[{name:"initUpdateTswap",accounts:[{name:"tswap",isMut:!0,isSigner:!1},{name:"feeVault",isMut:!1,isSigner:!1},{name:"cosigner",isMut:!1,isSigner:!0,docs:["We ask also for a signature just to make sure this wallet can actually sign things"]},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"newOwner",isMut:!1,isSigner:!0}],args:[{name:"config",type:{defined:"TSwapConfig"}}]},{name:"initPool",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation / will be stored inside pool"]},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"nftAuthority",isMut:!0,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"authSeeds",type:{array:["u8",32]}},{name:"isCosigned",type:"bool"},{name:"orderType",type:"u8"},{name:"maxTakerSellCount",type:{option:"u32"}}]},{name:"closePool",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"solEscrow",isMut:!0,isSigner:!1,docs:["(!) if the order is marginated this won't return any funds to the user, since margin isn't auto-closed"]},{name:"whitelist",isMut:!1,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"nftAuthority",isMut:!0,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}}]},{name:"depositNft",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation, also checked via has_one on pool"]},{name:"nftSource",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"nftEscrow",isMut:!0,isSigner:!1,docs:["Implicitly checked via transfer. Will fail if wrong account"]},{name:"nftReceipt",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"nftMetadata",isMut:!0,isSigner:!1},{name:"mintProof",isMut:!1,isSigner:!1},{name:"nftEdition",isMut:!1,isSigner:!1},{name:"ownerTokenRecord",isMut:!0,isSigner:!1},{name:"destTokenRecord",isMut:!0,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"pnftShared",accounts:[{name:"tokenMetadataProgram",isMut:!1,isSigner:!1},{name:"instructions",isMut:!1,isSigner:!1},{name:"authorizationRulesProgram",isMut:!1,isSigner:!1}]},{name:"authRules",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}},{name:"rulesAccPresent",type:"bool"}]},{name:"withdrawNft",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1},{name:"nftDest",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"nftEscrow",isMut:!0,isSigner:!1,docs:["Implicitly checked via transfer. Will fail if wrong account","This is closed below (dest = owner)"]},{name:"nftReceipt",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0,docs:["Tied to the pool because used to verify pool seeds"]},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"nftMetadata",isMut:!0,isSigner:!1},{name:"nftEdition",isMut:!1,isSigner:!1},{name:"ownerTokenRecord",isMut:!0,isSigner:!1},{name:"destTokenRecord",isMut:!0,isSigner:!1},{name:"pnftShared",accounts:[{name:"tokenMetadataProgram",isMut:!1,isSigner:!1},{name:"instructions",isMut:!1,isSigner:!1},{name:"authorizationRulesProgram",isMut:!1,isSigner:!1}]},{name:"authRules",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}},{name:"rulesAccPresent",type:"bool"}]},{name:"depositSol",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"lamports",type:"u64"}]},{name:"withdrawSol",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0,docs:["Tied to the pool because used to verify pool seeds"]},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"lamports",type:"u64"}]},{name:"buyNft",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"feeVault",isMut:!0,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation, has_one = whitelist on pool"]},{name:"nftBuyerAcc",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"nftMetadata",isMut:!0,isSigner:!1},{name:"nftEscrow",isMut:!0,isSigner:!1,docs:["Implicitly checked via transfer. Will fail if wrong account.","This is closed below (dest = owner)"]},{name:"nftReceipt",isMut:!0,isSigner:!1},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!1},{name:"buyer",isMut:!0,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"nftEdition",isMut:!1,isSigner:!1},{name:"ownerTokenRecord",isMut:!0,isSigner:!1},{name:"destTokenRecord",isMut:!0,isSigner:!1},{name:"pnftShared",accounts:[{name:"tokenMetadataProgram",isMut:!1,isSigner:!1},{name:"instructions",isMut:!1,isSigner:!1},{name:"authorizationRulesProgram",isMut:!1,isSigner:!1}]},{name:"authRules",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"takerBroker",isMut:!0,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"maxPrice",type:"u64"},{name:"rulesAccPresent",type:"bool"},{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}},{name:"optionalRoyaltyPct",type:{option:"u16"}}]},{name:"sellNftTokenPool",accounts:[{name:"shared",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"feeVault",isMut:!0,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation, also checked via has_one on pool"]},{name:"mintProof",isMut:!1,isSigner:!1,docs:["intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"]},{name:"nftSellerAcc",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"nftMetadata",isMut:!0,isSigner:!1},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!1},{name:"seller",isMut:!0,isSigner:!0}]},{name:"ownerAtaAcc",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"nftEdition",isMut:!1,isSigner:!1},{name:"ownerTokenRecord",isMut:!0,isSigner:!1},{name:"destTokenRecord",isMut:!0,isSigner:!1},{name:"pnftShared",accounts:[{name:"tokenMetadataProgram",isMut:!1,isSigner:!1},{name:"instructions",isMut:!1,isSigner:!1},{name:"authorizationRulesProgram",isMut:!1,isSigner:!1}]},{name:"nftEscrow",isMut:!0,isSigner:!1,docs:["Implicitly checked via transfer. Will fail if wrong account"]},{name:"tempEscrowTokenRecord",isMut:!0,isSigner:!1},{name:"authRules",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"takerBroker",isMut:!0,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"minPrice",type:"u64"},{name:"rulesAccPresent",type:"bool"},{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}},{name:"optionalRoyaltyPct",type:{option:"u16"}}]},{name:"sellNftTradePool",accounts:[{name:"shared",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"feeVault",isMut:!0,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation, also checked via has_one on pool"]},{name:"mintProof",isMut:!1,isSigner:!1,docs:["intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"]},{name:"nftSellerAcc",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"nftMetadata",isMut:!0,isSigner:!1},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!1},{name:"seller",isMut:!0,isSigner:!0}]},{name:"nftEscrow",isMut:!0,isSigner:!1,docs:["Implicitly checked via transfer. Will fail if wrong account"]},{name:"nftReceipt",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"nftEdition",isMut:!1,isSigner:!1},{name:"ownerTokenRecord",isMut:!0,isSigner:!1},{name:"destTokenRecord",isMut:!0,isSigner:!1},{name:"pnftShared",accounts:[{name:"tokenMetadataProgram",isMut:!1,isSigner:!1},{name:"instructions",isMut:!1,isSigner:!1},{name:"authorizationRulesProgram",isMut:!1,isSigner:!1}]},{name:"authRules",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"takerBroker",isMut:!0,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"minPrice",type:"u64"},{name:"rulesAccPresent",type:"bool"},{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}},{name:"optionalRoyaltyPct",type:{option:"u16"}}]},{name:"editPool",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"oldPool",isMut:!0,isSigner:!1},{name:"newPool",isMut:!0,isSigner:!1},{name:"oldSolEscrow",isMut:!0,isSigner:!1},{name:"newSolEscrow",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation / will be stored inside pool"]},{name:"nftAuthority",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"oldConfig",type:{defined:"PoolConfig"}},{name:"newConfig",type:{defined:"PoolConfig"}},{name:"isCosigned",type:{option:"bool"}},{name:"maxTakerSellCount",type:{option:"u32"}}]},{name:"reallocPool",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation / will be stored inside pool"]},{name:"owner",isMut:!1,isSigner:!1},{name:"cosigner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}}]},{name:"initMarginAccount",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"marginNr",type:"u16"},{name:"name",type:{array:["u8",32]}}]},{name:"closeMarginAccount",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[]},{name:"depositMarginAccount",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"lamports",type:"u64"}]},{name:"withdrawMarginAccount",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"lamports",type:"u64"}]},{name:"attachPoolToMargin",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation / will be stored inside pool"]},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}}]},{name:"detachPoolFromMargin",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation / will be stored inside pool"]},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"lamports",type:"u64"}]},{name:"setPoolFreeze",accounts:[{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"freeze",type:"bool"}]},{name:"takeSnipe",accounts:[{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"actualPrice",type:"u64"},{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}}]},{name:"editPoolInPlace",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1,docs:["Needed for pool seeds derivation / will be stored inside pool"]},{name:"owner",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"isCosigned",type:{option:"bool"}},{name:"maxTakerSellCount",type:{option:"u32"}},{name:"mmCompoundFees",type:{option:"bool"}}]},{name:"withdrawTswapFees",accounts:[{name:"tswap",isMut:!0,isSigner:!1},{name:"cosigner",isMut:!1,isSigner:!0,docs:["We ask also for a signature just to make sure this wallet can actually sign things"]},{name:"owner",isMut:!0,isSigner:!0},{name:"destination",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"list",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"nftSource",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"nftEscrow",isMut:!0,isSigner:!1,docs:["Implicitly checked via transfer. Will fail if wrong account"]},{name:"singleListing",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"nftMetadata",isMut:!0,isSigner:!1},{name:"nftEdition",isMut:!1,isSigner:!1},{name:"ownerTokenRecord",isMut:!0,isSigner:!1},{name:"destTokenRecord",isMut:!0,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"pnftShared",accounts:[{name:"tokenMetadataProgram",isMut:!1,isSigner:!1},{name:"instructions",isMut:!1,isSigner:!1},{name:"authorizationRulesProgram",isMut:!1,isSigner:!1}]},{name:"authRules",isMut:!1,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0}],args:[{name:"price",type:"u64"},{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}},{name:"rulesAccPresent",type:"bool"}]},{name:"delist",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"nftDest",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"nftEscrow",isMut:!0,isSigner:!1,docs:["Implicitly checked via transfer. Will fail if wrong account","This is closed below (dest = owner)"]},{name:"singleListing",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"nftMetadata",isMut:!0,isSigner:!1},{name:"nftEdition",isMut:!1,isSigner:!1},{name:"ownerTokenRecord",isMut:!0,isSigner:!1},{name:"destTokenRecord",isMut:!0,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"pnftShared",accounts:[{name:"tokenMetadataProgram",isMut:!1,isSigner:!1},{name:"instructions",isMut:!1,isSigner:!1},{name:"authorizationRulesProgram",isMut:!1,isSigner:!1}]},{name:"authRules",isMut:!1,isSigner:!1},{name:"payer",isMut:!0,isSigner:!0}],args:[{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}},{name:"rulesAccPresent",type:"bool"}]},{name:"buySingleListing",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"feeVault",isMut:!0,isSigner:!1},{name:"singleListing",isMut:!0,isSigner:!1},{name:"nftBuyerAcc",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"nftMetadata",isMut:!0,isSigner:!1},{name:"nftEscrow",isMut:!0,isSigner:!1,docs:["Implicitly checked via transfer. Will fail if wrong account.","This is closed below (dest = owner)"]},{name:"owner",isMut:!0,isSigner:!1},{name:"buyer",isMut:!0,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"nftEdition",isMut:!1,isSigner:!1},{name:"ownerTokenRecord",isMut:!0,isSigner:!1},{name:"destTokenRecord",isMut:!0,isSigner:!1},{name:"pnftShared",accounts:[{name:"tokenMetadataProgram",isMut:!1,isSigner:!1},{name:"instructions",isMut:!1,isSigner:!1},{name:"authorizationRulesProgram",isMut:!1,isSigner:!1}]},{name:"authRules",isMut:!1,isSigner:!1},{name:"takerBroker",isMut:!0,isSigner:!1}],args:[{name:"maxPrice",type:"u64"},{name:"rulesAccPresent",type:"bool"},{name:"authorizationData",type:{option:{defined:"AuthorizationDataLocal"}}},{name:"optionalRoyaltyPct",type:{option:"u16"}}]},{name:"editSingleListing",accounts:[{name:"singleListing",isMut:!0,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"owner",isMut:!1,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"price",type:"u64"}]},{name:"withdrawMmFee",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"pool",isMut:!0,isSigner:!1},{name:"whitelist",isMut:!1,isSigner:!1},{name:"solEscrow",isMut:!0,isSigner:!1},{name:"owner",isMut:!0,isSigner:!0,docs:["Tied to the pool because used to verify pool seeds"]},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"config",type:{defined:"PoolConfig"}},{name:"lamports",type:"u64"}]},{name:"withdrawMarginAccountCpi",accounts:[{name:"tswap",isMut:!1,isSigner:!1},{name:"marginAccount",isMut:!0,isSigner:!1},{name:"bidState",isMut:!0,isSigner:!0},{name:"owner",isMut:!1,isSigner:!1},{name:"nftMint",isMut:!1,isSigner:!1},{name:"destination",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"bump",type:"u8"},{name:"lamports",type:"u64"}]},{name:"withdrawMarginAccountCpiTcomp",accounts:[{name:"marginAccount",isMut:!0,isSigner:!1},{name:"bidState",isMut:!0,isSigner:!0},{name:"owner",isMut:!1,isSigner:!1},{name:"destination",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"bump",type:"u8"},{name:"bidId",type:"publicKey"},{name:"lamports",type:"u64"}]}],accounts:[{name:"TSwap",type:{kind:"struct",fields:[{name:"version",type:"u8"},{name:"bump",type:{array:["u8",1]}},{name:"config",docs:["@DEPRECATED, use constant above instead"],type:{defined:"TSwapConfig"}},{name:"owner",type:"publicKey"},{name:"feeVault",type:"publicKey"},{name:"cosigner",type:"publicKey"}]}},{name:"Pool",type:{kind:"struct",fields:[{name:"version",type:"u8"},{name:"bump",type:{array:["u8",1]}},{name:"solEscrowBump",type:{array:["u8",1]}},{name:"createdUnixSeconds",docs:["Unix timestamp in seconds when pool was created"],type:"i64"},{name:"config",type:{defined:"PoolConfig"}},{name:"tswap",type:"publicKey"},{name:"owner",type:"publicKey"},{name:"whitelist",type:"publicKey"},{name:"solEscrow",docs:["Used by Trade / Token pools only, but always initiated","Amount to spend is implied by balance - rent","(!) for margin accounts this should always be empty EXCEPT when we move frozen amount in"],type:"publicKey"},{name:"takerSellCount",docs:["How many times a taker has SOLD into the pool"],type:"u32"},{name:"takerBuyCount",docs:["How many times a taker has BOUGHT from the pool"],type:"u32"},{name:"nftsHeld",type:"u32"},{name:"nftAuthority",type:"publicKey"},{name:"stats",docs:["All stats incorporate both 1)carried over and 2)current data"],type:{defined:"PoolStats"}},{name:"margin",docs:["If margin account present, means it's a marginated pool (currently bids only)"],type:{option:"publicKey"}},{name:"isCosigned",docs:["Offchain actor signs off to make sure an offchain condition is met (eg trait present)"],type:"bool"},{name:"orderType",docs:["Order type for indexing ease (anchor enums annoying, so using a u8)","0 = standard, 1 = sniping (in the future eg 2 = take profit, etc)"],type:"u8"},{name:"frozen",docs:["Order is being executed by an offchain party and can't be modified at this time","incl. deposit/withdraw/edit/close/buy/sell"],type:{option:{defined:"Frozen"}}},{name:"lastTransactedSeconds",docs:["Last time a buy or sell order has been executed"],type:"i64"},{name:"maxTakerSellCount",docs:["Limit how many buys a pool can execute - useful for cross-margin, else keeps buying into infinity"],type:"u32"}]}},{name:"MarginAccount",type:{kind:"struct",fields:[{name:"owner",type:"publicKey"},{name:"name",type:{array:["u8",32]}},{name:"nr",type:"u16"},{name:"bump",type:{array:["u8",1]}},{name:"poolsAttached",type:"u32"},{name:"reserved",type:{array:["u8",64]}}]}},{name:"SingleListing",type:{kind:"struct",fields:[{name:"owner",type:"publicKey"},{name:"nftMint",type:"publicKey"},{name:"price",type:"u64"},{name:"bump",type:{array:["u8",1]}},{name:"reserved",type:{array:["u8",64]}}]}},{name:"NftDepositReceipt",docs:["Represents NFTs deposited into our protocol.","Always associated to (1) NFT mint (2) NFT escrow and (3) pool (every type)."],type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"nftAuthority",type:"publicKey"},{name:"nftMint",type:"publicKey"},{name:"nftEscrow",type:"publicKey"}]}},{name:"NftAuthority",docs:["Connector between a pool and all the NFTs in it, to be able to re-attach them to a different pool if needed"],type:{kind:"struct",fields:[{name:"randomSeed",type:{array:["u8",32]}},{name:"bump",type:{array:["u8",1]}},{name:"pool",type:"publicKey"}]}},{name:"SolEscrow",docs:["Need dummy Anchor account so we can use `close` constraint."],type:{kind:"struct",fields:[]}}],types:[{name:"TSwapConfig",type:{kind:"struct",fields:[{name:"feeBps",type:"u16"}]}},{name:"PoolConfig",type:{kind:"struct",fields:[{name:"poolType",type:{defined:"PoolType"}},{name:"curveType",type:{defined:"CurveType"}},{name:"startingPrice",type:"u64"},{name:"delta",type:"u64"},{name:"mmCompoundFees",docs:["Trade pools only"],type:"bool"},{name:"mmFeeBps",type:{option:"u16"}}]}},{name:"PoolStats",type:{kind:"struct",fields:[{name:"takerSellCount",type:"u32"},{name:"takerBuyCount",type:"u32"},{name:"accumulatedMmProfit",type:"u64"}]}},{name:"Frozen",type:{kind:"struct",fields:[{name:"amount",type:"u64"},{name:"time",type:"i64"}]}},{name:"AuthorizationDataLocal",type:{kind:"struct",fields:[{name:"payload",type:{vec:{defined:"TaggedPayload"}}}]}},{name:"TaggedPayload",type:{kind:"struct",fields:[{name:"name",type:"string"},{name:"payload",type:{defined:"PayloadTypeLocal"}}]}},{name:"SeedsVecLocal",type:{kind:"struct",fields:[{name:"seeds",docs:["The vector of derivation seeds."],type:{vec:"bytes"}}]}},{name:"ProofInfoLocal",type:{kind:"struct",fields:[{name:"proof",docs:["The merkle proof."],type:{vec:{array:["u8",32]}}}]}},{name:"PoolType",type:{kind:"enum",variants:[{name:"Token"},{name:"NFT"},{name:"Trade"}]}},{name:"CurveType",type:{kind:"enum",variants:[{name:"Linear"},{name:"Exponential"}]}},{name:"Direction",type:{kind:"enum",variants:[{name:"Up"},{name:"Down"}]}},{name:"TakerSide",type:{kind:"enum",variants:[{name:"Buy"},{name:"Sell"}]}},{name:"PayloadTypeLocal",type:{kind:"enum",variants:[{name:"Pubkey",fields:["publicKey"]},{name:"Seeds",fields:[{defined:"SeedsVecLocal"}]},{name:"MerkleProof",fields:[{defined:"ProofInfoLocal"}]},{name:"Number",fields:["u64"]}]}}],events:[{name:"BuySellEvent",fields:[{name:"currentPrice",type:"u64",index:!0},{name:"tswapFee",type:"u64",index:!0},{name:"mmFee",type:"u64",index:!0},{name:"creatorsFee",type:"u64",index:!0}]},{name:"DelistEvent",fields:[{name:"currentPrice",type:"u64",index:!0}]}],errors:[{code:6e3,name:"InvalidProof",msg:"invalid merkle proof, token not whitelisted"},{code:6001,name:"WhitelistNotVerified",msg:"whitelist not verified -- currently only verified pools supported"},{code:6002,name:"BadWhitelist",msg:"unexpected whitelist address"},{code:6003,name:"WrongPoolType",msg:"operation not permitted on this pool type"},{code:6004,name:"BadFeeAccount",msg:"fee account doesn't match that stored on pool"},{code:6005,name:"BadEscrowAccount",msg:"escrow account doesn't match that stored on pool"},{code:6006,name:"MissingFees",msg:"when setting up a Trade pool, must provide fee bps & fee vault"},{code:6007,name:"FeesTooHigh",msg:"fees entered above allowed threshold"},{code:6008,name:"DeltaTooLarge",msg:"delta too large"},{code:6009,name:"ArithmeticError",msg:"arithmetic error"},{code:6010,name:"WrongPool",msg:"this nft doesnt belong to this pool"},{code:6011,name:"RoyaltiesEnabled",msg:"royalties are enabled always"},{code:6012,name:"PriceMismatch",msg:"specified price not within current price"},{code:6013,name:"ExistingNfts",msg:"cannot close pool with nfts in escrow -- withdraw all before closing"},{code:6014,name:"WrongMint",msg:"wrong mint passed for provided accounts"},{code:6015,name:"InsufficientTswapAccBalance",msg:"insufficient Tswap account balance"},{code:6016,name:"BadOwner",msg:"bad owner"},{code:6017,name:"FeesNotAllowed",msg:"fees not allowed for non-trade pools"},{code:6018,name:"BadMetadata",msg:"metadata account does not match"},{code:6019,name:"CreatorMismatch",msg:"provided creator address does not match metadata creator"},{code:6020,name:"WrongPoolVersion",msg:"wrong pool version provided"},{code:6021,name:"PoolsAreTheSame",msg:"new pool should not match old pool"},{code:6022,name:"WrongAuthority",msg:"wrong nft authority account provided"},{code:6023,name:"FrozenAmountMismatch",msg:"amount frozen doesnt match current price"},{code:6024,name:"BadMintProof",msg:"mint proof account does not match"},{code:6025,name:"BadCosigner",msg:"bad cosigner passed - either wrong key or no signature"},{code:6026,name:"PoolFrozen",msg:"pool is frozen and cannot execute normal operations"},{code:6027,name:"BadMargin",msg:"bad margin account passed"},{code:6028,name:"PoolNotMarginated",msg:"expected a marginated pool to be passed in"},{code:6029,name:"PoolMarginated",msg:"expected a non-marginated pool to be passed in"},{code:6030,name:"WrongOrderType",msg:"wrong order type"},{code:6031,name:"WrongFrozenStatus",msg:"wrong frozen status"},{code:6032,name:"MarginInUse",msg:"margin account has pools open and is in use"},{code:6033,name:"MaxTakerSellCountExceeded",msg:"max taker sell count exceeded, pool cannot buy anymore NFTs"},{code:6034,name:"MaxTakerSellCountTooSmall",msg:"max taker sell count is too small"},{code:6035,name:"BadRuleSet",msg:"rule set for programmable nft does not match"},{code:6036,name:"PoolFeesCompounded",msg:"this pool compounds fees and they cannot be withdrawn separately"},{code:6037,name:"BadRoyaltiesPct",msg:"royalties percentage passed in must be between 0 and 100"},{code:6038,name:"StartingPriceTooSmall",msg:"starting price can't be smaller than 1 lamport"}]},humanizeFn:async(e,n)=>{const i=await g(e.name).with("list",(async()=>await V(e,n))).with("editSingleListing",(async()=>await V(e,n))).otherwise((async()=>await(async(e,n)=>(e.args,{data:{listPrice:0,marketplace:"TENSOR",nftMint:void 0,rawInstruction:e}}))(e)));return console.log("Tensor Program:",i),{data:i.data,type:g(e.name).with("list",(()=>"LIST_NFT")).with("editSingleListing",(()=>"LIST_NFT")).with("delist",(()=>"DELIST_NFT")).otherwise((()=>"UNKNOWN")),relevance:"PRIMARY"}}},{programId:"whirLbMiicVdio4qvUfM5KAg6Ct8VwpYzGff3uctyCc",name:"Orca Whirpool",idl:{version:"0.2.0",name:"whirlpool",instructions:[{name:"initializeConfig",accounts:[{name:"config",isMut:!0,isSigner:!0},{name:"funder",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"feeAuthority",type:"publicKey"},{name:"collectProtocolFeesAuthority",type:"publicKey"},{name:"rewardEmissionsSuperAuthority",type:"publicKey"},{name:"defaultProtocolFeeRate",type:"u16"}]},{name:"initializePool",accounts:[{name:"whirlpoolsConfig",isMut:!1,isSigner:!1},{name:"tokenMintA",isMut:!1,isSigner:!1},{name:"tokenMintB",isMut:!1,isSigner:!1},{name:"funder",isMut:!0,isSigner:!0},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!0},{name:"tokenVaultB",isMut:!0,isSigner:!0},{name:"feeTier",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"bumps",type:{defined:"WhirlpoolBumps"}},{name:"tickSpacing",type:"u16"},{name:"initialSqrtPrice",type:"u128"}]},{name:"initializeTickArray",accounts:[{name:"whirlpool",isMut:!1,isSigner:!1},{name:"funder",isMut:!0,isSigner:!0},{name:"tickArray",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"startTickIndex",type:"i32"}]},{name:"initializeFeeTier",accounts:[{name:"config",isMut:!1,isSigner:!1},{name:"feeTier",isMut:!0,isSigner:!1},{name:"funder",isMut:!0,isSigner:!0},{name:"feeAuthority",isMut:!1,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"tickSpacing",type:"u16"},{name:"defaultFeeRate",type:"u16"}]},{name:"initializeReward",accounts:[{name:"rewardAuthority",isMut:!1,isSigner:!0},{name:"funder",isMut:!0,isSigner:!0},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"rewardMint",isMut:!1,isSigner:!1},{name:"rewardVault",isMut:!0,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"}]},{name:"setRewardEmissions",accounts:[{name:"whirlpool",isMut:!0,isSigner:!1},{name:"rewardAuthority",isMut:!1,isSigner:!0},{name:"rewardVault",isMut:!1,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"},{name:"emissionsPerSecondX64",type:"u128"}]},{name:"openPosition",accounts:[{name:"funder",isMut:!0,isSigner:!0},{name:"owner",isMut:!1,isSigner:!1},{name:"position",isMut:!0,isSigner:!1},{name:"positionMint",isMut:!0,isSigner:!0},{name:"positionTokenAccount",isMut:!0,isSigner:!1},{name:"whirlpool",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1}],args:[{name:"bumps",type:{defined:"OpenPositionBumps"}},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"}]},{name:"openPositionWithMetadata",accounts:[{name:"funder",isMut:!0,isSigner:!0},{name:"owner",isMut:!1,isSigner:!1},{name:"position",isMut:!0,isSigner:!1},{name:"positionMint",isMut:!0,isSigner:!0},{name:"positionMetadataAccount",isMut:!0,isSigner:!1},{name:"positionTokenAccount",isMut:!0,isSigner:!1},{name:"whirlpool",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"metadataProgram",isMut:!1,isSigner:!1},{name:"metadataUpdateAuth",isMut:!1,isSigner:!1}],args:[{name:"bumps",type:{defined:"OpenPositionWithMetadataBumps"}},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"}]},{name:"increaseLiquidity",accounts:[{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"positionAuthority",isMut:!1,isSigner:!0},{name:"position",isMut:!0,isSigner:!1},{name:"positionTokenAccount",isMut:!1,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1}],args:[{name:"liquidityAmount",type:"u128"},{name:"tokenMaxA",type:"u64"},{name:"tokenMaxB",type:"u64"}]},{name:"decreaseLiquidity",accounts:[{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"positionAuthority",isMut:!1,isSigner:!0},{name:"position",isMut:!0,isSigner:!1},{name:"positionTokenAccount",isMut:!1,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1}],args:[{name:"liquidityAmount",type:"u128"},{name:"tokenMinA",type:"u64"},{name:"tokenMinB",type:"u64"}]},{name:"updateFeesAndRewards",accounts:[{name:"whirlpool",isMut:!0,isSigner:!1},{name:"position",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!1,isSigner:!1},{name:"tickArrayUpper",isMut:!1,isSigner:!1}],args:[]},{name:"collectFees",accounts:[{name:"whirlpool",isMut:!1,isSigner:!1},{name:"positionAuthority",isMut:!1,isSigner:!0},{name:"position",isMut:!0,isSigner:!1},{name:"positionTokenAccount",isMut:!1,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"collectReward",accounts:[{name:"whirlpool",isMut:!1,isSigner:!1},{name:"positionAuthority",isMut:!1,isSigner:!0},{name:"position",isMut:!0,isSigner:!1},{name:"positionTokenAccount",isMut:!1,isSigner:!1},{name:"rewardOwnerAccount",isMut:!0,isSigner:!1},{name:"rewardVault",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"}]},{name:"collectProtocolFees",accounts:[{name:"whirlpoolsConfig",isMut:!1,isSigner:!1},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"collectProtocolFeesAuthority",isMut:!1,isSigner:!0},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tokenDestinationA",isMut:!0,isSigner:!1},{name:"tokenDestinationB",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"swap",accounts:[{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tokenAuthority",isMut:!1,isSigner:!0},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountA",isMut:!0,isSigner:!1},{name:"tokenVaultA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountB",isMut:!0,isSigner:!1},{name:"tokenVaultB",isMut:!0,isSigner:!1},{name:"tickArray0",isMut:!0,isSigner:!1},{name:"tickArray1",isMut:!0,isSigner:!1},{name:"tickArray2",isMut:!0,isSigner:!1},{name:"oracle",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"},{name:"otherAmountThreshold",type:"u64"},{name:"sqrtPriceLimit",type:"u128"},{name:"amountSpecifiedIsInput",type:"bool"},{name:"aToB",type:"bool"}]},{name:"closePosition",accounts:[{name:"positionAuthority",isMut:!1,isSigner:!0},{name:"receiver",isMut:!0,isSigner:!1},{name:"position",isMut:!0,isSigner:!1},{name:"positionMint",isMut:!0,isSigner:!1},{name:"positionTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"setDefaultFeeRate",accounts:[{name:"whirlpoolsConfig",isMut:!1,isSigner:!1},{name:"feeTier",isMut:!0,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!0}],args:[{name:"defaultFeeRate",type:"u16"}]},{name:"setDefaultProtocolFeeRate",accounts:[{name:"whirlpoolsConfig",isMut:!0,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!0}],args:[{name:"defaultProtocolFeeRate",type:"u16"}]},{name:"setFeeRate",accounts:[{name:"whirlpoolsConfig",isMut:!1,isSigner:!1},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!0}],args:[{name:"feeRate",type:"u16"}]},{name:"setProtocolFeeRate",accounts:[{name:"whirlpoolsConfig",isMut:!1,isSigner:!1},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!0}],args:[{name:"protocolFeeRate",type:"u16"}]},{name:"setFeeAuthority",accounts:[{name:"whirlpoolsConfig",isMut:!0,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!0},{name:"newFeeAuthority",isMut:!1,isSigner:!1}],args:[]},{name:"setCollectProtocolFeesAuthority",accounts:[{name:"whirlpoolsConfig",isMut:!0,isSigner:!1},{name:"collectProtocolFeesAuthority",isMut:!1,isSigner:!0},{name:"newCollectProtocolFeesAuthority",isMut:!1,isSigner:!1}],args:[]},{name:"setRewardAuthority",accounts:[{name:"whirlpool",isMut:!0,isSigner:!1},{name:"rewardAuthority",isMut:!1,isSigner:!0},{name:"newRewardAuthority",isMut:!1,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"}]},{name:"setRewardAuthorityBySuperAuthority",accounts:[{name:"whirlpoolsConfig",isMut:!1,isSigner:!1},{name:"whirlpool",isMut:!0,isSigner:!1},{name:"rewardEmissionsSuperAuthority",isMut:!1,isSigner:!0},{name:"newRewardAuthority",isMut:!1,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"}]},{name:"setRewardEmissionsSuperAuthority",accounts:[{name:"whirlpoolsConfig",isMut:!0,isSigner:!1},{name:"rewardEmissionsSuperAuthority",isMut:!1,isSigner:!0},{name:"newRewardEmissionsSuperAuthority",isMut:!1,isSigner:!1}],args:[]},{name:"twoHopSwap",accounts:[{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tokenAuthority",isMut:!1,isSigner:!0},{name:"whirlpoolOne",isMut:!0,isSigner:!1},{name:"whirlpoolTwo",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountOneA",isMut:!0,isSigner:!1},{name:"tokenVaultOneA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountOneB",isMut:!0,isSigner:!1},{name:"tokenVaultOneB",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountTwoA",isMut:!0,isSigner:!1},{name:"tokenVaultTwoA",isMut:!0,isSigner:!1},{name:"tokenOwnerAccountTwoB",isMut:!0,isSigner:!1},{name:"tokenVaultTwoB",isMut:!0,isSigner:!1},{name:"tickArrayOne0",isMut:!0,isSigner:!1},{name:"tickArrayOne1",isMut:!0,isSigner:!1},{name:"tickArrayOne2",isMut:!0,isSigner:!1},{name:"tickArrayTwo0",isMut:!0,isSigner:!1},{name:"tickArrayTwo1",isMut:!0,isSigner:!1},{name:"tickArrayTwo2",isMut:!0,isSigner:!1},{name:"oracleOne",isMut:!1,isSigner:!1},{name:"oracleTwo",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"},{name:"otherAmountThreshold",type:"u64"},{name:"amountSpecifiedIsInput",type:"bool"},{name:"aToBOne",type:"bool"},{name:"aToBTwo",type:"bool"},{name:"sqrtPriceLimitOne",type:"u128"},{name:"sqrtPriceLimitTwo",type:"u128"}]},{name:"initializePositionBundle",accounts:[{name:"positionBundle",isMut:!0,isSigner:!1},{name:"positionBundleMint",isMut:!0,isSigner:!0},{name:"positionBundleTokenAccount",isMut:!0,isSigner:!1},{name:"positionBundleOwner",isMut:!1,isSigner:!1},{name:"funder",isMut:!0,isSigner:!0},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"initializePositionBundleWithMetadata",accounts:[{name:"positionBundle",isMut:!0,isSigner:!1},{name:"positionBundleMint",isMut:!0,isSigner:!0},{name:"positionBundleMetadata",isMut:!0,isSigner:!1},{name:"positionBundleTokenAccount",isMut:!0,isSigner:!1},{name:"positionBundleOwner",isMut:!1,isSigner:!1},{name:"funder",isMut:!0,isSigner:!0},{name:"metadataUpdateAuth",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"metadataProgram",isMut:!1,isSigner:!1}],args:[]},{name:"deletePositionBundle",accounts:[{name:"positionBundle",isMut:!0,isSigner:!1},{name:"positionBundleMint",isMut:!0,isSigner:!1},{name:"positionBundleTokenAccount",isMut:!0,isSigner:!1},{name:"positionBundleOwner",isMut:!1,isSigner:!0},{name:"receiver",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"openBundledPosition",accounts:[{name:"bundledPosition",isMut:!0,isSigner:!1},{name:"positionBundle",isMut:!0,isSigner:!1},{name:"positionBundleTokenAccount",isMut:!1,isSigner:!1},{name:"positionBundleAuthority",isMut:!1,isSigner:!0},{name:"whirlpool",isMut:!1,isSigner:!1},{name:"funder",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"bundleIndex",type:"u16"},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"}]},{name:"closeBundledPosition",accounts:[{name:"bundledPosition",isMut:!0,isSigner:!1},{name:"positionBundle",isMut:!0,isSigner:!1},{name:"positionBundleTokenAccount",isMut:!1,isSigner:!1},{name:"positionBundleAuthority",isMut:!1,isSigner:!0},{name:"receiver",isMut:!0,isSigner:!1}],args:[{name:"bundleIndex",type:"u16"}]}],accounts:[{name:"WhirlpoolsConfig",type:{kind:"struct",fields:[{name:"feeAuthority",type:"publicKey"},{name:"collectProtocolFeesAuthority",type:"publicKey"},{name:"rewardEmissionsSuperAuthority",type:"publicKey"},{name:"defaultProtocolFeeRate",type:"u16"}]}},{name:"FeeTier",type:{kind:"struct",fields:[{name:"whirlpoolsConfig",type:"publicKey"},{name:"tickSpacing",type:"u16"},{name:"defaultFeeRate",type:"u16"}]}},{name:"PositionBundle",type:{kind:"struct",fields:[{name:"positionBundleMint",type:"publicKey"},{name:"positionBitmap",type:{array:["u8",32]}}]}},{name:"Position",type:{kind:"struct",fields:[{name:"whirlpool",type:"publicKey"},{name:"positionMint",type:"publicKey"},{name:"liquidity",type:"u128"},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"feeGrowthCheckpointA",type:"u128"},{name:"feeOwedA",type:"u64"},{name:"feeGrowthCheckpointB",type:"u128"},{name:"feeOwedB",type:"u64"},{name:"rewardInfos",type:{array:[{defined:"PositionRewardInfo"},3]}}]}},{name:"TickArray",type:{kind:"struct",fields:[{name:"startTickIndex",type:"i32"},{name:"ticks",type:{array:[{defined:"Tick"},88]}},{name:"whirlpool",type:"publicKey"}]}},{name:"Whirlpool",type:{kind:"struct",fields:[{name:"whirlpoolsConfig",type:"publicKey"},{name:"whirlpoolBump",type:{array:["u8",1]}},{name:"tickSpacing",type:"u16"},{name:"tickSpacingSeed",type:{array:["u8",2]}},{name:"feeRate",type:"u16"},{name:"protocolFeeRate",type:"u16"},{name:"liquidity",type:"u128"},{name:"sqrtPrice",type:"u128"},{name:"tickCurrentIndex",type:"i32"},{name:"protocolFeeOwedA",type:"u64"},{name:"protocolFeeOwedB",type:"u64"},{name:"tokenMintA",type:"publicKey"},{name:"tokenVaultA",type:"publicKey"},{name:"feeGrowthGlobalA",type:"u128"},{name:"tokenMintB",type:"publicKey"},{name:"tokenVaultB",type:"publicKey"},{name:"feeGrowthGlobalB",type:"u128"},{name:"rewardLastUpdatedTimestamp",type:"u64"},{name:"rewardInfos",type:{array:[{defined:"WhirlpoolRewardInfo"},3]}}]}}],types:[{name:"OpenPositionBumps",type:{kind:"struct",fields:[{name:"positionBump",type:"u8"}]}},{name:"OpenPositionWithMetadataBumps",type:{kind:"struct",fields:[{name:"positionBump",type:"u8"},{name:"metadataBump",type:"u8"}]}},{name:"PositionRewardInfo",type:{kind:"struct",fields:[{name:"growthInsideCheckpoint",type:"u128"},{name:"amountOwed",type:"u64"}]}},{name:"Tick",type:{kind:"struct",fields:[{name:"initialized",type:"bool"},{name:"liquidityNet",type:"i128"},{name:"liquidityGross",type:"u128"},{name:"feeGrowthOutsideA",type:"u128"},{name:"feeGrowthOutsideB",type:"u128"},{name:"rewardGrowthsOutside",type:{array:["u128",3]}}]}},{name:"WhirlpoolRewardInfo",type:{kind:"struct",fields:[{name:"mint",type:"publicKey"},{name:"vault",type:"publicKey"},{name:"authority",type:"publicKey"},{name:"emissionsPerSecondX64",type:"u128"},{name:"growthGlobalX64",type:"u128"}]}},{name:"WhirlpoolBumps",type:{kind:"struct",fields:[{name:"whirlpoolBump",type:"u8"}]}},{name:"CurrIndex",type:{kind:"enum",variants:[{name:"Below"},{name:"Inside"},{name:"Above"}]}},{name:"TickLabel",type:{kind:"enum",variants:[{name:"Upper"},{name:"Lower"}]}},{name:"Direction",type:{kind:"enum",variants:[{name:"Left"},{name:"Right"}]}}],errors:[{code:6e3,name:"InvalidEnum",msg:"Enum value could not be converted"},{code:6001,name:"InvalidStartTick",msg:"Invalid start tick index provided."},{code:6002,name:"TickArrayExistInPool",msg:"Tick-array already exists in this whirlpool"},{code:6003,name:"TickArrayIndexOutofBounds",msg:"Attempt to search for a tick-array failed"},{code:6004,name:"InvalidTickSpacing",msg:"Tick-spacing is not supported"},{code:6005,name:"ClosePositionNotEmpty",msg:"Position is not empty It cannot be closed"},{code:6006,name:"DivideByZero",msg:"Unable to divide by zero"},{code:6007,name:"NumberCastError",msg:"Unable to cast number into BigInt"},{code:6008,name:"NumberDownCastError",msg:"Unable to down cast number"},{code:6009,name:"TickNotFound",msg:"Tick not found within tick array"},{code:6010,name:"InvalidTickIndex",msg:"Provided tick index is either out of bounds or uninitializable"},{code:6011,name:"SqrtPriceOutOfBounds",msg:"Provided sqrt price out of bounds"},{code:6012,name:"LiquidityZero",msg:"Liquidity amount must be greater than zero"},{code:6013,name:"LiquidityTooHigh",msg:"Liquidity amount must be less than i64::MAX"},{code:6014,name:"LiquidityOverflow",msg:"Liquidity overflow"},{code:6015,name:"LiquidityUnderflow",msg:"Liquidity underflow"},{code:6016,name:"LiquidityNetError",msg:"Tick liquidity net underflowed or overflowed"},{code:6017,name:"TokenMaxExceeded",msg:"Exceeded token max"},{code:6018,name:"TokenMinSubceeded",msg:"Did not meet token min"},{code:6019,name:"MissingOrInvalidDelegate",msg:"Position token account has a missing or invalid delegate"},{code:6020,name:"InvalidPositionTokenAmount",msg:"Position token amount must be 1"},{code:6021,name:"InvalidTimestampConversion",msg:"Timestamp should be convertible from i64 to u64"},{code:6022,name:"InvalidTimestamp",msg:"Timestamp should be greater than the last updated timestamp"},{code:6023,name:"InvalidTickArraySequence",msg:"Invalid tick array sequence provided for instruction."},{code:6024,name:"InvalidTokenMintOrder",msg:"Token Mint in wrong order"},{code:6025,name:"RewardNotInitialized",msg:"Reward not initialized"},{code:6026,name:"InvalidRewardIndex",msg:"Invalid reward index"},{code:6027,name:"RewardVaultAmountInsufficient",msg:"Reward vault requires amount to support emissions for at least one day"},{code:6028,name:"FeeRateMaxExceeded",msg:"Exceeded max fee rate"},{code:6029,name:"ProtocolFeeRateMaxExceeded",msg:"Exceeded max protocol fee rate"},{code:6030,name:"MultiplicationShiftRightOverflow",msg:"Multiplication with shift right overflow"},{code:6031,name:"MulDivOverflow",msg:"Muldiv overflow"},{code:6032,name:"MulDivInvalidInput",msg:"Invalid div_u256 input"},{code:6033,name:"MultiplicationOverflow",msg:"Multiplication overflow"},{code:6034,name:"InvalidSqrtPriceLimitDirection",msg:"Provided SqrtPriceLimit not in the same direction as the swap."},{code:6035,name:"ZeroTradableAmount",msg:"There are no tradable amount to swap."},{code:6036,name:"AmountOutBelowMinimum",msg:"Amount out below minimum threshold"},{code:6037,name:"AmountInAboveMaximum",msg:"Amount in above maximum threshold"},{code:6038,name:"TickArraySequenceInvalidIndex",msg:"Invalid index for tick array sequence"},{code:6039,name:"AmountCalcOverflow",msg:"Amount calculated overflows"},{code:6040,name:"AmountRemainingOverflow",msg:"Amount remaining overflows"},{code:6041,name:"InvalidIntermediaryMint",msg:"Invalid intermediary mint"},{code:6042,name:"DuplicateTwoHopPool",msg:"Duplicate two hop pool"},{code:6043,name:"InvalidBundleIndex",msg:"Bundle index is out of bounds"},{code:6044,name:"BundledPositionAlreadyOpened",msg:"Position has already been opened"},{code:6045,name:"BundledPositionAlreadyClosed",msg:"Position has already been closed"},{code:6046,name:"PositionBundleNotDeletable",msg:"Unable to delete PositionBundle with open positions"}]},humanizeFn:async(e,n)=>{const[i,t]=await g(e.name).with("swap",(async()=>new Promise((async n=>n(["SWAP_ORCA",await F(e)]))))).otherwise((async()=>new Promise((async n=>n(["UNKNOWN",await N(e)])))));return console.log("Jupiter Program V4:",t),{data:t.data,type:i,relevance:"PRIMARY"}}}];const C=async(e,n)=>{const i=e.args;return{data:{from:t.find(e.accounts,(e=>"sender"==e.name)).pubkey.toBase58(),to:t.find(e.accounts,(e=>"receiver"==e.name)).pubkey.toBase58(),amount:Number(i.lamports),rawInstruction:e}}},D=async(e,n)=>await M(e);const _=async(e,n)=>{var i,s;const a=e.args,r=t.find(e.accounts,(e=>"source"==e.name)).pubkey.toBase58(),o=t.find(e.accounts,(e=>"destination"==e.name)).pubkey.toBase58(),u=null===(i=t.find(e.accounts,(e=>"tokenMint"==e.name)))||void 0===i?void 0:i.pubkey.toBase58(),m=null===(s=t.find(e.accounts,(e=>"owner"==e.name)))||void 0===s?void 0:s.pubkey.toBase58();return{data:{from:r,to:o,amount:Number(a.amount),owner:m,tokenMint:u,rawInstruction:e}}},U=async(e,n)=>{var i;const s=e.args,a=t.find(e.accounts,(e=>"authority"==e.name)).pubkey.toBase58(),r=t.find(e.accounts,(e=>"mintTo"==e.name)).pubkey.toBase58(),o=null===(i=t.find(e.accounts,(e=>"tokenMint"==e.name)))||void 0===i?void 0:i.pubkey.toBase58();return{data:{authority:a,to:r,amount:Number(s.amount),tokenMint:o,rawInstruction:e}}},W=async(e,n)=>await M(e);const K=[{programId:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",name:"Token Program",humanizeFn:async(e,n)=>{const[i,t]=await g(e.name).with("transfer",(async()=>new Promise((async n=>n(["SPL_TRANSFER",await _(e)]))))).with("transferChecked",(async()=>new Promise((async n=>n(["SPL_TRANSFER",await _(e)]))))).with("mintTo",(async()=>new Promise((async n=>n(["TOKEN_MINT",await U(e)]))))).otherwise((async()=>new Promise((async n=>n(["UNKNOWN",await W(e)])))));return console.log("Token program: ",t),{data:t.data,type:i,relevance:"PRIMARY"}}},{programId:"11111111111111111111111111111111",name:"System Program",humanizeFn:async(e,n)=>{const[i,t]=await g(e.name).with("transfer",(async()=>new Promise((async n=>n(["SOL_TRANSFER",await C(e)]))))).with("transferChecked",(async()=>new Promise((async n=>n(["SPL_TRANSFER",await C(e)]))))).otherwise((async()=>new Promise((async n=>n(["UNKNOWN",await D(e)])))));return console.log("Token program: ",t),{data:t.data,type:i,relevance:"PRIMARY"}}},{programId:"ComputeBudget111111111111111111111111111111",name:"Compute Budget",humanizeFn:async(e,n)=>{const i=await(async(e,n)=>({data:{rawInstruction:e}}))(e);return console.log("Compute Budget program: ",i),{data:i.data,type:"COMPUTE_BUDGET",relevance:"SECONDARY"}}}];class z{constructor(n){this._connection=n.connection,this._walletAddress=n.walletAddress,this._tokens=n.tokens,this._txParser=new e(x)}async parseProgramInstructions(e,n){const i=e.map((e=>n.find((n=>e.programId.toBase58()==n.programId)))).filter((e=>!t.isUndefined(e))),s=e.map((e=>{const n=i.find((n=>n.programId==e.programId.toBase58()));return n?n.humanizeFn(e,this._connection):this.parseUnknownInstructions(e)}));return(await Promise.all(s)).filter((e=>!t.isUndefined(e)))}async parseUnknownInstructions(e){return new Promise((async n=>{n({data:(await M(e)).data,type:"UNKNOWN",relevance:"SECONDARY"})}))}async inferTransactionType(e){const n=[l,f,A,h,P,T,b],i=async(n,s)=>{if(s<n.length){const a=await n[s]({instructions:e,tokens:this._tokens?this._tokens:[],walletAddress:this._walletAddress,connection:this._connection});return t.isNull(a)?await i(n,s+1):a}return null};return await i(n,0)}async nedParser(e){const n=x.concat(K),i=await this.parseProgramInstructions(e,n);return{...await this.inferTransactionType(i),instructions:i}}async parseTransaction(e,i){var s,a;const r=await this._connection.getTransaction(e,{commitment:i,maxSupportedTransactionVersion:0});if(!r)return null;const o=n(r).map((e=>this._txParser.parseInstruction(e)));return o?{...await this.nedParser(o),date:r.blockTime,fee:null===(s=r.meta)||void 0===s?void 0:s.fee,txId:e,success:t.isNull(null===(a=r.meta)||void 0===a?void 0:a.err),raw:r}:null}async parseInstruction(e){const n=this._txParser.parseTransactionData(e);return await this.nedParser(n)}parseLogs(e){return i(e)}parseTransactionDump(e){return this._txParser.parseTransactionDump(e)}}export{z as default};
//# sourceMappingURL=index.js.map
